{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst reportException = require(\"../helpers/runtime-script-errors\");\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst {\n  nodeRoot\n} = require(\"../helpers/node\");\n\nconst {\n  isNode,\n  isShadowRoot,\n  isSlotable,\n  getEventTargetParent,\n  isShadowInclusiveAncestor,\n  retarget\n} = require(\"../helpers/shadow-dom\");\n\nconst MouseEvent = require(\"../generated/MouseEvent\");\n\nconst EVENT_PHASE = {\n  NONE: 0,\n  CAPTURING_PHASE: 1,\n  AT_TARGET: 2,\n  BUBBLING_PHASE: 3\n};\n\nclass EventTargetImpl {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n    this._eventListeners = Object.create(null);\n  }\n\n  addEventListener(type, callback, options) {\n    options = normalizeEventHandlerOptions(options, [\"capture\", \"once\", \"passive\"]);\n\n    if (callback === null) {\n      return;\n    }\n\n    if (!this._eventListeners[type]) {\n      this._eventListeners[type] = [];\n    }\n\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\n      const listener = this._eventListeners[type][i];\n\n      if (listener.callback.objectReference === callback.objectReference && listener.options.capture === options.capture) {\n        return;\n      }\n    }\n\n    this._eventListeners[type].push({\n      callback,\n      options\n    });\n  }\n\n  removeEventListener(type, callback, options) {\n    options = normalizeEventHandlerOptions(options, [\"capture\"]);\n\n    if (callback === null) {\n      // Optimization, not in the spec.\n      return;\n    }\n\n    if (!this._eventListeners[type]) {\n      return;\n    }\n\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\n      const listener = this._eventListeners[type][i];\n\n      if (listener.callback.objectReference === callback.objectReference && listener.options.capture === options.capture) {\n        this._eventListeners[type].splice(i, 1);\n\n        break;\n      }\n    }\n  }\n\n  dispatchEvent(eventImpl) {\n    if (eventImpl._dispatchFlag || !eventImpl._initializedFlag) {\n      throw DOMException.create(this._globalObject, [\"Tried to dispatch an uninitialized event\", \"InvalidStateError\"]);\n    }\n\n    if (eventImpl.eventPhase !== EVENT_PHASE.NONE) {\n      throw DOMException.create(this._globalObject, [\"Tried to dispatch a dispatching event\", \"InvalidStateError\"]);\n    }\n\n    eventImpl.isTrusted = false;\n    return this._dispatch(eventImpl);\n  } // https://dom.spec.whatwg.org/#get-the-parent\n\n\n  _getTheParent() {\n    return null;\n  } // https://dom.spec.whatwg.org/#concept-event-dispatch\n  // legacyOutputDidListenersThrowFlag optional parameter is not necessary here since it is only used by indexDB.\n\n\n  _dispatch(eventImpl, targetOverride\n  /* , legacyOutputDidListenersThrowFlag */\n  ) {\n    let targetImpl = this;\n    let clearTargets = false;\n    let activationTarget = null;\n    eventImpl._dispatchFlag = true;\n    targetOverride = targetOverride || targetImpl;\n    let relatedTarget = retarget(eventImpl.relatedTarget, targetImpl);\n\n    if (targetImpl !== relatedTarget || targetImpl === eventImpl.relatedTarget) {\n      const touchTargets = [];\n      appendToEventPath(eventImpl, targetImpl, targetOverride, relatedTarget, touchTargets, false);\n      const isActivationEvent = MouseEvent.isImpl(eventImpl) && eventImpl.type === \"click\";\n\n      if (isActivationEvent && targetImpl._hasActivationBehavior) {\n        activationTarget = targetImpl;\n      }\n\n      let slotInClosedTree = false;\n      let slotable = isSlotable(targetImpl) && targetImpl._assignedSlot ? targetImpl : null;\n      let parent = getEventTargetParent(targetImpl, eventImpl); // Populate event path\n      // https://dom.spec.whatwg.org/#event-path\n\n      while (parent !== null) {\n        if (slotable !== null) {\n          if (parent.localName !== \"slot\") {\n            throw new Error(`JSDOM Internal Error: Expected parent to be a Slot`);\n          }\n\n          slotable = null;\n          const parentRoot = nodeRoot(parent);\n\n          if (isShadowRoot(parentRoot) && parentRoot.mode === \"closed\") {\n            slotInClosedTree = true;\n          }\n        }\n\n        if (isSlotable(parent) && parent._assignedSlot) {\n          slotable = parent;\n        }\n\n        relatedTarget = retarget(eventImpl.relatedTarget, parent);\n\n        if (isNode(parent) && isShadowInclusiveAncestor(nodeRoot(targetImpl), parent) || idlUtils.wrapperForImpl(parent).constructor.name === \"Window\") {\n          if (isActivationEvent && eventImpl.bubbles && activationTarget === null && parent._hasActivationBehavior) {\n            activationTarget = parent;\n          }\n\n          appendToEventPath(eventImpl, parent, null, relatedTarget, touchTargets, slotInClosedTree);\n        } else if (parent === relatedTarget) {\n          parent = null;\n        } else {\n          targetImpl = parent;\n\n          if (isActivationEvent && activationTarget === null && targetImpl._hasActivationBehavior) {\n            activationTarget = targetImpl;\n          }\n\n          appendToEventPath(eventImpl, parent, targetImpl, relatedTarget, touchTargets, slotInClosedTree);\n        }\n\n        if (parent !== null) {\n          parent = getEventTargetParent(parent, eventImpl);\n        }\n\n        slotInClosedTree = false;\n      }\n\n      let clearTargetsStructIndex = -1;\n\n      for (let i = eventImpl._path.length - 1; i >= 0 && clearTargetsStructIndex === -1; i--) {\n        if (eventImpl._path[i].target !== null) {\n          clearTargetsStructIndex = i;\n        }\n      }\n\n      const clearTargetsStruct = eventImpl._path[clearTargetsStructIndex];\n      clearTargets = isNode(clearTargetsStruct.target) && isShadowRoot(nodeRoot(clearTargetsStruct.target)) || isNode(clearTargetsStruct.relatedTarget) && isShadowRoot(nodeRoot(clearTargetsStruct.relatedTarget));\n\n      if (activationTarget !== null && activationTarget._legacyPreActivationBehavior) {\n        activationTarget._legacyPreActivationBehavior();\n      }\n\n      for (let i = eventImpl._path.length - 1; i >= 0; --i) {\n        const struct = eventImpl._path[i];\n\n        if (struct.target !== null) {\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\n        } else {\n          eventImpl.eventPhase = EVENT_PHASE.CAPTURING_PHASE;\n        }\n\n        invokeEventListeners(struct, eventImpl, \"capturing\");\n      }\n\n      for (let i = 0; i < eventImpl._path.length; i++) {\n        const struct = eventImpl._path[i];\n\n        if (struct.target !== null) {\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\n        } else {\n          if (!eventImpl.bubbles) {\n            continue;\n          }\n\n          eventImpl.eventPhase = EVENT_PHASE.BUBBLING_PHASE;\n        }\n\n        invokeEventListeners(struct, eventImpl, \"bubbling\");\n      }\n    }\n\n    eventImpl.eventPhase = EVENT_PHASE.NONE;\n    eventImpl.currentTarget = null;\n    eventImpl._path = [];\n    eventImpl._dispatchFlag = false;\n    eventImpl._stopPropagationFlag = false;\n    eventImpl._stopImmediatePropagationFlag = false;\n\n    if (clearTargets) {\n      eventImpl.target = null;\n      eventImpl.relatedTarget = null;\n    }\n\n    if (activationTarget !== null) {\n      if (!eventImpl._canceledFlag) {\n        activationTarget._activationBehavior(eventImpl);\n      } else if (activationTarget._legacyCanceledActivationBehavior) {\n        activationTarget._legacyCanceledActivationBehavior();\n      }\n    }\n\n    return !eventImpl._canceledFlag;\n  }\n\n}\n\nmodule.exports = {\n  implementation: EventTargetImpl\n}; // https://dom.spec.whatwg.org/#concept-event-listener-invoke\n\nfunction invokeEventListeners(struct, eventImpl, phase) {\n  const structIndex = eventImpl._path.indexOf(struct);\n\n  for (let i = structIndex; i >= 0; i--) {\n    const t = eventImpl._path[i];\n\n    if (t.target) {\n      eventImpl.target = t.target;\n      break;\n    }\n  }\n\n  eventImpl.relatedTarget = idlUtils.wrapperForImpl(struct.relatedTarget);\n\n  if (eventImpl._stopPropagationFlag) {\n    return;\n  }\n\n  eventImpl.currentTarget = idlUtils.wrapperForImpl(struct.item);\n  const listeners = struct.item._eventListeners;\n  innerInvokeEventListeners(eventImpl, listeners, phase, struct.itemInShadowTree);\n} // https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\n\n\nfunction innerInvokeEventListeners(eventImpl, listeners, phase, itemInShadowTree) {\n  let found = false;\n  const {\n    type,\n    target\n  } = eventImpl;\n  const wrapper = idlUtils.wrapperForImpl(target);\n\n  if (!listeners || !listeners[type]) {\n    return found;\n  } // Copy event listeners before iterating since the list can be modified during the iteration.\n\n\n  const handlers = listeners[type].slice();\n\n  for (let i = 0; i < handlers.length; i++) {\n    const listener = handlers[i];\n    const {\n      capture,\n      once,\n      passive\n    } = listener.options; // Check if the event listener has been removed since the listeners has been cloned.\n\n    if (!listeners[type].includes(listener)) {\n      continue;\n    }\n\n    found = true;\n\n    if (phase === \"capturing\" && !capture || phase === \"bubbling\" && capture) {\n      continue;\n    }\n\n    if (once) {\n      listeners[type].splice(listeners[type].indexOf(listener), 1);\n    }\n\n    let window = null;\n\n    if (wrapper && wrapper._document) {\n      // Triggered by Window\n      window = wrapper;\n    } else if (target._ownerDocument) {\n      // Triggered by most webidl2js'ed instances\n      window = target._ownerDocument._defaultView;\n    } else if (wrapper._ownerDocument) {\n      // Currently triggered by some non-webidl2js things\n      window = wrapper._ownerDocument._defaultView;\n    }\n\n    let currentEvent;\n\n    if (window) {\n      currentEvent = window._currentEvent;\n\n      if (!itemInShadowTree) {\n        window._currentEvent = eventImpl;\n      }\n    }\n\n    if (passive) {\n      eventImpl._inPassiveListenerFlag = true;\n    }\n\n    try {\n      listener.callback.call(eventImpl.currentTarget, eventImpl);\n    } catch (e) {\n      if (window) {\n        reportException(window, e);\n      } // Errors in window-less documents just get swallowed... can you think of anything better?\n\n    }\n\n    eventImpl._inPassiveListenerFlag = false;\n\n    if (window) {\n      window._currentEvent = currentEvent;\n    }\n\n    if (eventImpl._stopImmediatePropagationFlag) {\n      return found;\n    }\n  }\n\n  return found;\n}\n/**\n * Normalize the event listeners options argument in order to get always a valid options object\n * @param   {Object} options         - user defined options\n * @param   {Array} defaultBoolKeys  - boolean properties that should belong to the options object\n * @returns {Object} object containing at least the \"defaultBoolKeys\"\n */\n\n\nfunction normalizeEventHandlerOptions(options, defaultBoolKeys) {\n  const returnValue = {}; // no need to go further here\n\n  if (typeof options === \"boolean\" || options === null || typeof options === \"undefined\") {\n    returnValue.capture = Boolean(options);\n    return returnValue;\n  } // non objects options so we typecast its value as \"capture\" value\n\n\n  if (typeof options !== \"object\") {\n    returnValue.capture = Boolean(options); // at this point we don't need to loop the \"capture\" key anymore\n\n    defaultBoolKeys = defaultBoolKeys.filter(k => k !== \"capture\");\n  }\n\n  for (const key of defaultBoolKeys) {\n    returnValue[key] = Boolean(options[key]);\n  }\n\n  return returnValue;\n} // https://dom.spec.whatwg.org/#concept-event-path-append\n\n\nfunction appendToEventPath(eventImpl, target, targetOverride, relatedTarget, touchTargets, slotInClosedTree) {\n  const itemInShadowTree = isNode(target) && isShadowRoot(nodeRoot(target));\n  const rootOfClosedTree = isShadowRoot(target) && target.mode === \"closed\";\n\n  eventImpl._path.push({\n    item: target,\n    itemInShadowTree,\n    target: targetOverride,\n    relatedTarget,\n    touchTargets,\n    rootOfClosedTree,\n    slotInClosedTree\n  });\n}","map":{"version":3,"names":["DOMException","require","reportException","idlUtils","nodeRoot","isNode","isShadowRoot","isSlotable","getEventTargetParent","isShadowInclusiveAncestor","retarget","MouseEvent","EVENT_PHASE","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","EventTargetImpl","constructor","globalObject","_globalObject","_eventListeners","Object","create","addEventListener","type","callback","options","normalizeEventHandlerOptions","i","length","listener","objectReference","capture","push","removeEventListener","splice","dispatchEvent","eventImpl","_dispatchFlag","_initializedFlag","eventPhase","isTrusted","_dispatch","_getTheParent","targetOverride","targetImpl","clearTargets","activationTarget","relatedTarget","touchTargets","appendToEventPath","isActivationEvent","isImpl","_hasActivationBehavior","slotInClosedTree","slotable","_assignedSlot","parent","localName","Error","parentRoot","mode","wrapperForImpl","name","bubbles","clearTargetsStructIndex","_path","target","clearTargetsStruct","_legacyPreActivationBehavior","struct","invokeEventListeners","currentTarget","_stopPropagationFlag","_stopImmediatePropagationFlag","_canceledFlag","_activationBehavior","_legacyCanceledActivationBehavior","module","exports","implementation","phase","structIndex","indexOf","t","item","listeners","innerInvokeEventListeners","itemInShadowTree","found","wrapper","handlers","slice","once","passive","includes","window","_document","_ownerDocument","_defaultView","currentEvent","_currentEvent","_inPassiveListenerFlag","call","e","defaultBoolKeys","returnValue","Boolean","filter","k","key","rootOfClosedTree"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js"],"sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst reportException = require(\"../helpers/runtime-script-errors\");\nconst idlUtils = require(\"../generated/utils\");\nconst { nodeRoot } = require(\"../helpers/node\");\nconst {\n  isNode, isShadowRoot, isSlotable, getEventTargetParent,\n  isShadowInclusiveAncestor, retarget\n} = require(\"../helpers/shadow-dom\");\n\nconst MouseEvent = require(\"../generated/MouseEvent\");\n\nconst EVENT_PHASE = {\n  NONE: 0,\n  CAPTURING_PHASE: 1,\n  AT_TARGET: 2,\n  BUBBLING_PHASE: 3\n};\n\nclass EventTargetImpl {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n    this._eventListeners = Object.create(null);\n  }\n\n  addEventListener(type, callback, options) {\n    options = normalizeEventHandlerOptions(options, [\"capture\", \"once\", \"passive\"]);\n\n    if (callback === null) {\n      return;\n    }\n\n    if (!this._eventListeners[type]) {\n      this._eventListeners[type] = [];\n    }\n\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\n      const listener = this._eventListeners[type][i];\n      if (\n        listener.callback.objectReference === callback.objectReference &&\n        listener.options.capture === options.capture\n      ) {\n        return;\n      }\n    }\n\n    this._eventListeners[type].push({\n      callback,\n      options\n    });\n  }\n\n  removeEventListener(type, callback, options) {\n    options = normalizeEventHandlerOptions(options, [\"capture\"]);\n\n    if (callback === null) {\n      // Optimization, not in the spec.\n      return;\n    }\n\n    if (!this._eventListeners[type]) {\n      return;\n    }\n\n    for (let i = 0; i < this._eventListeners[type].length; ++i) {\n      const listener = this._eventListeners[type][i];\n      if (\n        listener.callback.objectReference === callback.objectReference &&\n        listener.options.capture === options.capture\n      ) {\n        this._eventListeners[type].splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  dispatchEvent(eventImpl) {\n    if (eventImpl._dispatchFlag || !eventImpl._initializedFlag) {\n      throw DOMException.create(this._globalObject, [\n        \"Tried to dispatch an uninitialized event\",\n        \"InvalidStateError\"\n      ]);\n    }\n    if (eventImpl.eventPhase !== EVENT_PHASE.NONE) {\n      throw DOMException.create(this._globalObject, [\n        \"Tried to dispatch a dispatching event\",\n        \"InvalidStateError\"\n      ]);\n    }\n\n    eventImpl.isTrusted = false;\n\n    return this._dispatch(eventImpl);\n  }\n\n  // https://dom.spec.whatwg.org/#get-the-parent\n  _getTheParent() {\n    return null;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-event-dispatch\n  // legacyOutputDidListenersThrowFlag optional parameter is not necessary here since it is only used by indexDB.\n  _dispatch(eventImpl, targetOverride /* , legacyOutputDidListenersThrowFlag */) {\n    let targetImpl = this;\n    let clearTargets = false;\n    let activationTarget = null;\n\n    eventImpl._dispatchFlag = true;\n\n    targetOverride = targetOverride || targetImpl;\n    let relatedTarget = retarget(eventImpl.relatedTarget, targetImpl);\n\n    if (targetImpl !== relatedTarget || targetImpl === eventImpl.relatedTarget) {\n      const touchTargets = [];\n\n      appendToEventPath(eventImpl, targetImpl, targetOverride, relatedTarget, touchTargets, false);\n\n      const isActivationEvent = MouseEvent.isImpl(eventImpl) && eventImpl.type === \"click\";\n\n      if (isActivationEvent && targetImpl._hasActivationBehavior) {\n        activationTarget = targetImpl;\n      }\n\n      let slotInClosedTree = false;\n      let slotable = isSlotable(targetImpl) && targetImpl._assignedSlot ? targetImpl : null;\n      let parent = getEventTargetParent(targetImpl, eventImpl);\n\n      // Populate event path\n      // https://dom.spec.whatwg.org/#event-path\n      while (parent !== null) {\n        if (slotable !== null) {\n          if (parent.localName !== \"slot\") {\n            throw new Error(`JSDOM Internal Error: Expected parent to be a Slot`);\n          }\n\n          slotable = null;\n\n          const parentRoot = nodeRoot(parent);\n          if (isShadowRoot(parentRoot) && parentRoot.mode === \"closed\") {\n            slotInClosedTree = true;\n          }\n        }\n\n        if (isSlotable(parent) && parent._assignedSlot) {\n          slotable = parent;\n        }\n\n        relatedTarget = retarget(eventImpl.relatedTarget, parent);\n\n        if (\n          (isNode(parent) && isShadowInclusiveAncestor(nodeRoot(targetImpl), parent)) ||\n          idlUtils.wrapperForImpl(parent).constructor.name === \"Window\"\n        ) {\n          if (isActivationEvent && eventImpl.bubbles && activationTarget === null &&\n              parent._hasActivationBehavior) {\n            activationTarget = parent;\n          }\n\n          appendToEventPath(eventImpl, parent, null, relatedTarget, touchTargets, slotInClosedTree);\n        } else if (parent === relatedTarget) {\n          parent = null;\n        } else {\n          targetImpl = parent;\n\n          if (isActivationEvent && activationTarget === null && targetImpl._hasActivationBehavior) {\n            activationTarget = targetImpl;\n          }\n\n          appendToEventPath(eventImpl, parent, targetImpl, relatedTarget, touchTargets, slotInClosedTree);\n        }\n\n        if (parent !== null) {\n          parent = getEventTargetParent(parent, eventImpl);\n        }\n\n        slotInClosedTree = false;\n      }\n\n      let clearTargetsStructIndex = -1;\n      for (let i = eventImpl._path.length - 1; i >= 0 && clearTargetsStructIndex === -1; i--) {\n        if (eventImpl._path[i].target !== null) {\n          clearTargetsStructIndex = i;\n        }\n      }\n      const clearTargetsStruct = eventImpl._path[clearTargetsStructIndex];\n\n      clearTargets =\n          (isNode(clearTargetsStruct.target) && isShadowRoot(nodeRoot(clearTargetsStruct.target))) ||\n          (isNode(clearTargetsStruct.relatedTarget) && isShadowRoot(nodeRoot(clearTargetsStruct.relatedTarget)));\n\n      if (activationTarget !== null && activationTarget._legacyPreActivationBehavior) {\n        activationTarget._legacyPreActivationBehavior();\n      }\n\n      for (let i = eventImpl._path.length - 1; i >= 0; --i) {\n        const struct = eventImpl._path[i];\n\n        if (struct.target !== null) {\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\n        } else {\n          eventImpl.eventPhase = EVENT_PHASE.CAPTURING_PHASE;\n        }\n\n        invokeEventListeners(struct, eventImpl, \"capturing\");\n      }\n\n      for (let i = 0; i < eventImpl._path.length; i++) {\n        const struct = eventImpl._path[i];\n\n        if (struct.target !== null) {\n          eventImpl.eventPhase = EVENT_PHASE.AT_TARGET;\n        } else {\n          if (!eventImpl.bubbles) {\n            continue;\n          }\n\n          eventImpl.eventPhase = EVENT_PHASE.BUBBLING_PHASE;\n        }\n\n        invokeEventListeners(struct, eventImpl, \"bubbling\");\n      }\n    }\n\n    eventImpl.eventPhase = EVENT_PHASE.NONE;\n\n    eventImpl.currentTarget = null;\n    eventImpl._path = [];\n    eventImpl._dispatchFlag = false;\n    eventImpl._stopPropagationFlag = false;\n    eventImpl._stopImmediatePropagationFlag = false;\n\n    if (clearTargets) {\n      eventImpl.target = null;\n      eventImpl.relatedTarget = null;\n    }\n\n    if (activationTarget !== null) {\n      if (!eventImpl._canceledFlag) {\n        activationTarget._activationBehavior(eventImpl);\n      } else if (activationTarget._legacyCanceledActivationBehavior) {\n        activationTarget._legacyCanceledActivationBehavior();\n      }\n    }\n\n    return !eventImpl._canceledFlag;\n  }\n}\n\nmodule.exports = {\n  implementation: EventTargetImpl\n};\n\n// https://dom.spec.whatwg.org/#concept-event-listener-invoke\nfunction invokeEventListeners(struct, eventImpl, phase) {\n  const structIndex = eventImpl._path.indexOf(struct);\n  for (let i = structIndex; i >= 0; i--) {\n    const t = eventImpl._path[i];\n    if (t.target) {\n      eventImpl.target = t.target;\n      break;\n    }\n  }\n\n  eventImpl.relatedTarget = idlUtils.wrapperForImpl(struct.relatedTarget);\n\n  if (eventImpl._stopPropagationFlag) {\n    return;\n  }\n\n  eventImpl.currentTarget = idlUtils.wrapperForImpl(struct.item);\n\n  const listeners = struct.item._eventListeners;\n  innerInvokeEventListeners(eventImpl, listeners, phase, struct.itemInShadowTree);\n}\n\n// https://dom.spec.whatwg.org/#concept-event-listener-inner-invoke\nfunction innerInvokeEventListeners(eventImpl, listeners, phase, itemInShadowTree) {\n  let found = false;\n\n  const { type, target } = eventImpl;\n  const wrapper = idlUtils.wrapperForImpl(target);\n\n  if (!listeners || !listeners[type]) {\n    return found;\n  }\n\n  // Copy event listeners before iterating since the list can be modified during the iteration.\n  const handlers = listeners[type].slice();\n\n  for (let i = 0; i < handlers.length; i++) {\n    const listener = handlers[i];\n    const { capture, once, passive } = listener.options;\n\n    // Check if the event listener has been removed since the listeners has been cloned.\n    if (!listeners[type].includes(listener)) {\n      continue;\n    }\n\n    found = true;\n\n    if (\n      (phase === \"capturing\" && !capture) ||\n      (phase === \"bubbling\" && capture)\n    ) {\n      continue;\n    }\n\n    if (once) {\n      listeners[type].splice(listeners[type].indexOf(listener), 1);\n    }\n\n    let window = null;\n    if (wrapper && wrapper._document) {\n      // Triggered by Window\n      window = wrapper;\n    } else if (target._ownerDocument) {\n      // Triggered by most webidl2js'ed instances\n      window = target._ownerDocument._defaultView;\n    } else if (wrapper._ownerDocument) {\n      // Currently triggered by some non-webidl2js things\n      window = wrapper._ownerDocument._defaultView;\n    }\n\n    let currentEvent;\n    if (window) {\n      currentEvent = window._currentEvent;\n      if (!itemInShadowTree) {\n        window._currentEvent = eventImpl;\n      }\n    }\n\n    if (passive) {\n      eventImpl._inPassiveListenerFlag = true;\n    }\n\n    try {\n      listener.callback.call(eventImpl.currentTarget, eventImpl);\n    } catch (e) {\n      if (window) {\n        reportException(window, e);\n      }\n      // Errors in window-less documents just get swallowed... can you think of anything better?\n    }\n\n    eventImpl._inPassiveListenerFlag = false;\n\n    if (window) {\n      window._currentEvent = currentEvent;\n    }\n\n    if (eventImpl._stopImmediatePropagationFlag) {\n      return found;\n    }\n  }\n\n  return found;\n}\n\n/**\n * Normalize the event listeners options argument in order to get always a valid options object\n * @param   {Object} options         - user defined options\n * @param   {Array} defaultBoolKeys  - boolean properties that should belong to the options object\n * @returns {Object} object containing at least the \"defaultBoolKeys\"\n */\nfunction normalizeEventHandlerOptions(options, defaultBoolKeys) {\n  const returnValue = {};\n\n  // no need to go further here\n  if (typeof options === \"boolean\" || options === null || typeof options === \"undefined\") {\n    returnValue.capture = Boolean(options);\n    return returnValue;\n  }\n\n  // non objects options so we typecast its value as \"capture\" value\n  if (typeof options !== \"object\") {\n    returnValue.capture = Boolean(options);\n    // at this point we don't need to loop the \"capture\" key anymore\n    defaultBoolKeys = defaultBoolKeys.filter(k => k !== \"capture\");\n  }\n\n  for (const key of defaultBoolKeys) {\n    returnValue[key] = Boolean(options[key]);\n  }\n\n  return returnValue;\n}\n\n// https://dom.spec.whatwg.org/#concept-event-path-append\nfunction appendToEventPath(eventImpl, target, targetOverride, relatedTarget, touchTargets, slotInClosedTree) {\n  const itemInShadowTree = isNode(target) && isShadowRoot(nodeRoot(target));\n  const rootOfClosedTree = isShadowRoot(target) && target.mode === \"closed\";\n\n  eventImpl._path.push({\n    item: target,\n    itemInShadowTree,\n    target: targetOverride,\n    relatedTarget,\n    touchTargets,\n    rootOfClosedTree,\n    slotInClosedTree\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}