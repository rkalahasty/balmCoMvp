{"ast":null,"code":"'use strict';\n\nvar acorn = require('acorn');\n\nvar walk = require('acorn-walk');\n\nfunction isScope(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration' || node.type === 'ArrowFunctionExpression' || node.type === 'Program';\n}\n\nfunction isBlockScope(node) {\n  return node.type === 'BlockStatement' || isScope(node);\n}\n\nfunction declaresArguments(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration';\n}\n\nfunction declaresThis(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration';\n}\n\nfunction reallyParse(source, options) {\n  var parseOptions = Object.assign({}, options, {\n    allowReturnOutsideFunction: true,\n    allowImportExportEverywhere: true,\n    allowHashBang: true\n  });\n  return acorn.parse(source, parseOptions);\n}\n\nmodule.exports = findGlobals;\nmodule.exports.parse = reallyParse;\n\nfunction findGlobals(source, options) {\n  options = options || {};\n  var globals = [];\n  var ast; // istanbul ignore else\n\n  if (typeof source === 'string') {\n    ast = reallyParse(source, options);\n  } else {\n    ast = source;\n  } // istanbul ignore if\n\n\n  if (!(ast && typeof ast === 'object' && ast.type === 'Program')) {\n    throw new TypeError('Source must be either a string of JavaScript or an acorn AST');\n  }\n\n  var declareFunction = function (node) {\n    var fn = node;\n    fn.locals = fn.locals || Object.create(null);\n    node.params.forEach(function (node) {\n      declarePattern(node, fn);\n    });\n\n    if (node.id) {\n      fn.locals[node.id.name] = true;\n    }\n  };\n\n  var declareClass = function (node) {\n    node.locals = node.locals || Object.create(null);\n\n    if (node.id) {\n      node.locals[node.id.name] = true;\n    }\n  };\n\n  var declarePattern = function (node, parent) {\n    switch (node.type) {\n      case 'Identifier':\n        parent.locals[node.name] = true;\n        break;\n\n      case 'ObjectPattern':\n        node.properties.forEach(function (node) {\n          declarePattern(node.value || node.argument, parent);\n        });\n        break;\n\n      case 'ArrayPattern':\n        node.elements.forEach(function (node) {\n          if (node) declarePattern(node, parent);\n        });\n        break;\n\n      case 'RestElement':\n        declarePattern(node.argument, parent);\n        break;\n\n      case 'AssignmentPattern':\n        declarePattern(node.left, parent);\n        break;\n      // istanbul ignore next\n\n      default:\n        throw new Error('Unrecognized pattern type: ' + node.type);\n    }\n  };\n\n  var declareModuleSpecifier = function (node, parents) {\n    ast.locals = ast.locals || Object.create(null);\n    ast.locals[node.local.name] = true;\n  };\n\n  walk.ancestor(ast, {\n    'VariableDeclaration': function (node, parents) {\n      var parent = null;\n\n      for (var i = parents.length - 1; i >= 0 && parent === null; i--) {\n        if (node.kind === 'var' ? isScope(parents[i]) : isBlockScope(parents[i])) {\n          parent = parents[i];\n        }\n      }\n\n      parent.locals = parent.locals || Object.create(null);\n      node.declarations.forEach(function (declaration) {\n        declarePattern(declaration.id, parent);\n      });\n    },\n    'FunctionDeclaration': function (node, parents) {\n      var parent = null;\n\n      for (var i = parents.length - 2; i >= 0 && parent === null; i--) {\n        if (isScope(parents[i])) {\n          parent = parents[i];\n        }\n      }\n\n      parent.locals = parent.locals || Object.create(null);\n\n      if (node.id) {\n        parent.locals[node.id.name] = true;\n      }\n\n      declareFunction(node);\n    },\n    'Function': declareFunction,\n    'ClassDeclaration': function (node, parents) {\n      var parent = null;\n\n      for (var i = parents.length - 2; i >= 0 && parent === null; i--) {\n        if (isBlockScope(parents[i])) {\n          parent = parents[i];\n        }\n      }\n\n      parent.locals = parent.locals || Object.create(null);\n\n      if (node.id) {\n        parent.locals[node.id.name] = true;\n      }\n\n      declareClass(node);\n    },\n    'Class': declareClass,\n    'TryStatement': function (node) {\n      if (node.handler === null) return;\n      node.handler.locals = node.handler.locals || Object.create(null);\n      declarePattern(node.handler.param, node.handler);\n    },\n    'ImportDefaultSpecifier': declareModuleSpecifier,\n    'ImportSpecifier': declareModuleSpecifier,\n    'ImportNamespaceSpecifier': declareModuleSpecifier\n  });\n\n  function identifier(node, parents) {\n    var name = node.name;\n    if (name === 'undefined') return;\n\n    for (var i = 0; i < parents.length; i++) {\n      if (name === 'arguments' && declaresArguments(parents[i])) {\n        return;\n      }\n\n      if (parents[i].locals && name in parents[i].locals) {\n        return;\n      }\n    }\n\n    node.parents = parents.slice();\n    globals.push(node);\n  }\n\n  walk.ancestor(ast, {\n    'VariablePattern': identifier,\n    'Identifier': identifier,\n    'ThisExpression': function (node, parents) {\n      for (var i = 0; i < parents.length; i++) {\n        if (declaresThis(parents[i])) {\n          return;\n        }\n      }\n\n      node.parents = parents.slice();\n      globals.push(node);\n    }\n  });\n  var groupedGlobals = Object.create(null);\n  globals.forEach(function (node) {\n    var name = node.type === 'ThisExpression' ? 'this' : node.name;\n    groupedGlobals[name] = groupedGlobals[name] || [];\n    groupedGlobals[name].push(node);\n  });\n  return Object.keys(groupedGlobals).sort().map(function (name) {\n    return {\n      name: name,\n      nodes: groupedGlobals[name]\n    };\n  });\n}","map":{"version":3,"names":["acorn","require","walk","isScope","node","type","isBlockScope","declaresArguments","declaresThis","reallyParse","source","options","parseOptions","Object","assign","allowReturnOutsideFunction","allowImportExportEverywhere","allowHashBang","parse","module","exports","findGlobals","globals","ast","TypeError","declareFunction","fn","locals","create","params","forEach","declarePattern","id","name","declareClass","parent","properties","value","argument","elements","left","Error","declareModuleSpecifier","parents","local","ancestor","i","length","kind","declarations","declaration","handler","param","identifier","slice","push","groupedGlobals","keys","sort","map","nodes"],"sources":["C:/Users/17033/balmco/node_modules/acorn-globals/index.js"],"sourcesContent":["'use strict';\n\nvar acorn = require('acorn');\nvar walk = require('acorn-walk');\n\nfunction isScope(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration' || node.type === 'ArrowFunctionExpression' || node.type === 'Program';\n}\nfunction isBlockScope(node) {\n  return node.type === 'BlockStatement' || isScope(node);\n}\n\nfunction declaresArguments(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration';\n}\n\nfunction declaresThis(node) {\n  return node.type === 'FunctionExpression' || node.type === 'FunctionDeclaration';\n}\n\nfunction reallyParse(source, options) {\n  var parseOptions = Object.assign({}, options,\n    {\n      allowReturnOutsideFunction: true,\n      allowImportExportEverywhere: true,\n      allowHashBang: true\n    }\n  );\n  return acorn.parse(source, parseOptions);\n}\nmodule.exports = findGlobals;\nmodule.exports.parse = reallyParse;\nfunction findGlobals(source, options) {\n  options = options || {};\n  var globals = [];\n  var ast;\n  // istanbul ignore else\n  if (typeof source === 'string') {\n    ast = reallyParse(source, options);\n  } else {\n    ast = source;\n  }\n  // istanbul ignore if\n  if (!(ast && typeof ast === 'object' && ast.type === 'Program')) {\n    throw new TypeError('Source must be either a string of JavaScript or an acorn AST');\n  }\n  var declareFunction = function (node) {\n    var fn = node;\n    fn.locals = fn.locals || Object.create(null);\n    node.params.forEach(function (node) {\n      declarePattern(node, fn);\n    });\n    if (node.id) {\n      fn.locals[node.id.name] = true;\n    }\n  };\n  var declareClass = function (node) {\n    node.locals = node.locals || Object.create(null);\n    if (node.id) {\n      node.locals[node.id.name] = true;\n    }\n  };\n  var declarePattern = function (node, parent) {\n    switch (node.type) {\n      case 'Identifier':\n        parent.locals[node.name] = true;\n        break;\n      case 'ObjectPattern':\n        node.properties.forEach(function (node) {\n          declarePattern(node.value || node.argument, parent);\n        });\n        break;\n      case 'ArrayPattern':\n        node.elements.forEach(function (node) {\n          if (node) declarePattern(node, parent);\n        });\n        break;\n      case 'RestElement':\n        declarePattern(node.argument, parent);\n        break;\n      case 'AssignmentPattern':\n        declarePattern(node.left, parent);\n        break;\n      // istanbul ignore next\n      default:\n        throw new Error('Unrecognized pattern type: ' + node.type);\n    }\n  };\n  var declareModuleSpecifier = function (node, parents) {\n    ast.locals = ast.locals || Object.create(null);\n    ast.locals[node.local.name] = true;\n  };\n  walk.ancestor(ast, {\n    'VariableDeclaration': function (node, parents) {\n      var parent = null;\n      for (var i = parents.length - 1; i >= 0 && parent === null; i--) {\n        if (node.kind === 'var' ? isScope(parents[i]) : isBlockScope(parents[i])) {\n          parent = parents[i];\n        }\n      }\n      parent.locals = parent.locals || Object.create(null);\n      node.declarations.forEach(function (declaration) {\n        declarePattern(declaration.id, parent);\n      });\n    },\n    'FunctionDeclaration': function (node, parents) {\n      var parent = null;\n      for (var i = parents.length - 2; i >= 0 && parent === null; i--) {\n        if (isScope(parents[i])) {\n          parent = parents[i];\n        }\n      }\n      parent.locals = parent.locals || Object.create(null);\n      if (node.id) {\n        parent.locals[node.id.name] = true;\n      }\n      declareFunction(node);\n    },\n    'Function': declareFunction,\n    'ClassDeclaration': function (node, parents) {\n      var parent = null;\n      for (var i = parents.length - 2; i >= 0 && parent === null; i--) {\n        if (isBlockScope(parents[i])) {\n          parent = parents[i];\n        }\n      }\n      parent.locals = parent.locals || Object.create(null);\n      if (node.id) {\n        parent.locals[node.id.name] = true;\n      }\n      declareClass(node);\n    },\n    'Class': declareClass,\n    'TryStatement': function (node) {\n      if (node.handler === null) return;\n      node.handler.locals = node.handler.locals || Object.create(null);\n      declarePattern(node.handler.param, node.handler);\n    },\n    'ImportDefaultSpecifier': declareModuleSpecifier,\n    'ImportSpecifier': declareModuleSpecifier,\n    'ImportNamespaceSpecifier': declareModuleSpecifier\n  });\n  function identifier(node, parents) {\n    var name = node.name;\n    if (name === 'undefined') return;\n    for (var i = 0; i < parents.length; i++) {\n      if (name === 'arguments' && declaresArguments(parents[i])) {\n        return;\n      }\n      if (parents[i].locals && name in parents[i].locals) {\n        return;\n      }\n    }\n    node.parents = parents.slice();\n    globals.push(node);\n  }\n  walk.ancestor(ast, {\n    'VariablePattern': identifier,\n    'Identifier': identifier,\n    'ThisExpression': function (node, parents) {\n      for (var i = 0; i < parents.length; i++) {\n        if (declaresThis(parents[i])) {\n          return;\n        }\n      }\n      node.parents = parents.slice();\n      globals.push(node);\n    }\n  });\n  var groupedGlobals = Object.create(null);\n  globals.forEach(function (node) {\n    var name = node.type === 'ThisExpression' ? 'this' : node.name;\n    groupedGlobals[name] = (groupedGlobals[name] || []);\n    groupedGlobals[name].push(node);\n  });\n  return Object.keys(groupedGlobals).sort().map(function (name) {\n    return {name: name, nodes: groupedGlobals[name]};\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}