{"ast":null,"code":"\"use strict\";\n\nconst {\n  hrtime\n} = require(\"./utils\"); // The HR-TIME spec calls for 5-μs accuracy. Check that we have that in both hrtime() and Date.now().\n\n\nfunction testClockAccuracy() {\n  // Test hrtime() first. The check is simpler and more stable, and we use hrtime() to measure Date.now()'s performance.\n  const roundTrip = hrtime(hrtime());\n\n  if (roundTrip[0] > 1 || roundTrip[1] > 5e3 * 2) {\n    return false;\n  } // Test Date.now() twice: first with a looser bound (10 μs) but with a smaller run time to filter out very bad\n  // Date.now() performance, and then with a tighter bound (5 μs) to check we have the accuracy we need.\n\n\n  let times; // eslint-disable-next-line no-unused-vars\n\n  let cur;\n  let start;\n  let end;\n  times = 100;\n  start = hrtime();\n\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n\n  end = hrtime(start);\n\n  if (end[0] * 1e9 + end[1] > 1000000) {\n    return false;\n  }\n\n  times = 10000;\n  start = hrtime();\n\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n\n  end = hrtime(start);\n\n  if (end[0] * 1e9 + end[1] > 50000000) {\n    return false;\n  }\n\n  return true;\n} // Warm up the function.\n\n\ntestClockAccuracy();\ntestClockAccuracy();\ntestClockAccuracy();\nconst TIMES = 5;\nconst THRESHOLD = 0.6 * TIMES;\nlet accurates = 0;\n\nfor (let i = 0; i < TIMES; i++) {\n  if (testClockAccuracy()) {\n    accurates++;\n  }\n}\n\nconst isAccurate = accurates >= THRESHOLD;\nmodule.exports = isAccurate;","map":{"version":3,"names":["hrtime","require","testClockAccuracy","roundTrip","times","cur","start","end","Date","now","TIMES","THRESHOLD","accurates","i","isAccurate","module","exports"],"sources":["C:/Users/17033/balmco/node_modules/w3c-hr-time/lib/clock-is-accurate.js"],"sourcesContent":["\"use strict\";\n\nconst { hrtime } = require(\"./utils\");\n\n// The HR-TIME spec calls for 5-μs accuracy. Check that we have that in both hrtime() and Date.now().\n\nfunction testClockAccuracy() {\n  // Test hrtime() first. The check is simpler and more stable, and we use hrtime() to measure Date.now()'s performance.\n  const roundTrip = hrtime(hrtime());\n  if (roundTrip[0] > 1 || roundTrip[1] > 5e3 * 2) {\n    return false;\n  }\n\n  // Test Date.now() twice: first with a looser bound (10 μs) but with a smaller run time to filter out very bad\n  // Date.now() performance, and then with a tighter bound (5 μs) to check we have the accuracy we need.\n  let times;\n  // eslint-disable-next-line no-unused-vars\n  let cur;\n  let start;\n  let end;\n\n  times = 100;\n  start = hrtime();\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n  end = hrtime(start);\n  if ((end[0] * 1e9 + end[1]) > 1000000) {\n    return false;\n  }\n\n  times = 10000;\n  start = hrtime();\n  while (times-- > 0) {\n    cur = Date.now();\n  }\n  end = hrtime(start);\n  if ((end[0] * 1e9 + end[1]) > 50000000) {\n    return false;\n  }\n\n  return true;\n}\n\n// Warm up the function.\ntestClockAccuracy();\ntestClockAccuracy();\ntestClockAccuracy();\n\nconst TIMES = 5;\nconst THRESHOLD = 0.6 * TIMES;\nlet accurates = 0;\nfor (let i = 0; i < TIMES; i++) {\n  if (testClockAccuracy()) {\n    accurates++;\n  }\n}\n\nconst isAccurate = accurates >= THRESHOLD;\n\nmodule.exports = isAccurate;\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B,C,CAEA;;;AAEA,SAASC,iBAAT,GAA6B;EAC3B;EACA,MAAMC,SAAS,GAAGH,MAAM,CAACA,MAAM,EAAP,CAAxB;;EACA,IAAIG,SAAS,CAAC,CAAD,CAAT,GAAe,CAAf,IAAoBA,SAAS,CAAC,CAAD,CAAT,GAAe,MAAM,CAA7C,EAAgD;IAC9C,OAAO,KAAP;EACD,CAL0B,CAO3B;EACA;;;EACA,IAAIC,KAAJ,CAT2B,CAU3B;;EACA,IAAIC,GAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,GAAJ;EAEAH,KAAK,GAAG,GAAR;EACAE,KAAK,GAAGN,MAAM,EAAd;;EACA,OAAOI,KAAK,KAAK,CAAjB,EAAoB;IAClBC,GAAG,GAAGG,IAAI,CAACC,GAAL,EAAN;EACD;;EACDF,GAAG,GAAGP,MAAM,CAACM,KAAD,CAAZ;;EACA,IAAKC,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAAnB,GAA0B,OAA9B,EAAuC;IACrC,OAAO,KAAP;EACD;;EAEDH,KAAK,GAAG,KAAR;EACAE,KAAK,GAAGN,MAAM,EAAd;;EACA,OAAOI,KAAK,KAAK,CAAjB,EAAoB;IAClBC,GAAG,GAAGG,IAAI,CAACC,GAAL,EAAN;EACD;;EACDF,GAAG,GAAGP,MAAM,CAACM,KAAD,CAAZ;;EACA,IAAKC,GAAG,CAAC,CAAD,CAAH,GAAS,GAAT,GAAeA,GAAG,CAAC,CAAD,CAAnB,GAA0B,QAA9B,EAAwC;IACtC,OAAO,KAAP;EACD;;EAED,OAAO,IAAP;AACD,C,CAED;;;AACAL,iBAAiB;AACjBA,iBAAiB;AACjBA,iBAAiB;AAEjB,MAAMQ,KAAK,GAAG,CAAd;AACA,MAAMC,SAAS,GAAG,MAAMD,KAAxB;AACA,IAAIE,SAAS,GAAG,CAAhB;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAApB,EAA2BG,CAAC,EAA5B,EAAgC;EAC9B,IAAIX,iBAAiB,EAArB,EAAyB;IACvBU,SAAS;EACV;AACF;;AAED,MAAME,UAAU,GAAGF,SAAS,IAAID,SAAhC;AAEAI,MAAM,CAACC,OAAP,GAAiBF,UAAjB"},"metadata":{},"sourceType":"script"}