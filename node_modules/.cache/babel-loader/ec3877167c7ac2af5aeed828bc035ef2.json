{"ast":null,"code":"\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\n\nconst HTMLElement = require(\"../generated/HTMLElement\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  nodeRoot\n} = require(\"../helpers/node\");\n\nconst {\n  assignSlotableForTree,\n  findFlattenedSlotables\n} = require(\"../helpers/shadow-dom\");\n\nclass HTMLSlotElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._assignedNodes = [];\n  } // https://dom.spec.whatwg.org/#slot-name\n\n\n  get name() {\n    return this.getAttributeNS(null, \"name\") || \"\";\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue); // https://dom.spec.whatwg.org/#slot-name\n\n\n    if (name === \"name\") {\n      if (value === oldValue) {\n        return;\n      }\n\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n\n      assignSlotableForTree(nodeRoot(this));\n    }\n  } // https://html.spec.whatwg.org/#dom-slot-assignednodes\n\n\n  assignedNodes(options) {\n    if (!options || !options.flatten) {\n      return this._assignedNodes.map(idlUtils.wrapperForImpl);\n    }\n\n    return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);\n  } // https://html.spec.whatwg.org/#dom-slot-assignedelements\n\n\n  assignedElements(options) {\n    return this.assignedNodes(options).filter(HTMLElement.is);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLSlotElementImpl\n};","map":{"version":3,"names":["idlUtils","require","HTMLElement","HTMLElementImpl","implementation","nodeRoot","assignSlotableForTree","findFlattenedSlotables","HTMLSlotElementImpl","constructor","globalObject","args","privateData","_assignedNodes","name","getAttributeNS","_attrModified","value","oldValue","assignedNodes","options","flatten","map","wrapperForImpl","assignedElements","filter","is","module","exports"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/nodes/HTMLSlotElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst HTMLElement = require(\"../generated/HTMLElement\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst { nodeRoot } = require(\"../helpers/node\");\nconst { assignSlotableForTree, findFlattenedSlotables } = require(\"../helpers/shadow-dom\");\n\nclass HTMLSlotElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._assignedNodes = [];\n  }\n\n  // https://dom.spec.whatwg.org/#slot-name\n  get name() {\n    return this.getAttributeNS(null, \"name\") || \"\";\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    // https://dom.spec.whatwg.org/#slot-name\n    if (name === \"name\") {\n      if (value === oldValue) {\n        return;\n      }\n\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n\n      assignSlotableForTree(nodeRoot(this));\n    }\n  }\n\n  // https://html.spec.whatwg.org/#dom-slot-assignednodes\n  assignedNodes(options) {\n    if (!options || !options.flatten) {\n      return this._assignedNodes.map(idlUtils.wrapperForImpl);\n    }\n\n    return findFlattenedSlotables(this).map(idlUtils.wrapperForImpl);\n  }\n\n  // https://html.spec.whatwg.org/#dom-slot-assignedelements\n  assignedElements(options) {\n    return this.assignedNodes(options).filter(HTMLElement.is);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLSlotElementImpl\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,0BAAD,CAA3B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BG,cAAtD;;AAEA,MAAM;EAAEC;AAAF,IAAeJ,OAAO,CAAC,iBAAD,CAA5B;;AACA,MAAM;EAAEK,qBAAF;EAAyBC;AAAzB,IAAoDN,OAAO,CAAC,uBAAD,CAAjE;;AAEA,MAAMO,mBAAN,SAAkCL,eAAlC,CAAkD;EAChDM,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;IAC3C,MAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;IACA,KAAKC,cAAL,GAAsB,EAAtB;EACD,CAJ+C,CAMhD;;;EACQ,IAAJC,IAAI,GAAG;IACT,OAAO,KAAKC,cAAL,CAAoB,IAApB,EAA0B,MAA1B,KAAqC,EAA5C;EACD;;EAEDC,aAAa,CAACF,IAAD,EAAOG,KAAP,EAAcC,QAAd,EAAwB;IACnC,MAAMF,aAAN,CAAoBF,IAApB,EAA0BG,KAA1B,EAAiCC,QAAjC,EADmC,CAGnC;;;IACA,IAAIJ,IAAI,KAAK,MAAb,EAAqB;MACnB,IAAIG,KAAK,KAAKC,QAAd,EAAwB;QACtB;MACD;;MAED,IAAID,KAAK,KAAK,IAAV,IAAkBC,QAAQ,KAAK,EAAnC,EAAuC;QACrC;MACD;;MAED,IAAID,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,IAAjC,EAAuC;QACrC;MACD;;MAEDZ,qBAAqB,CAACD,QAAQ,CAAC,IAAD,CAAT,CAArB;IACD;EACF,CA9B+C,CAgChD;;;EACAc,aAAa,CAACC,OAAD,EAAU;IACrB,IAAI,CAACA,OAAD,IAAY,CAACA,OAAO,CAACC,OAAzB,EAAkC;MAChC,OAAO,KAAKR,cAAL,CAAoBS,GAApB,CAAwBtB,QAAQ,CAACuB,cAAjC,CAAP;IACD;;IAED,OAAOhB,sBAAsB,CAAC,IAAD,CAAtB,CAA6Be,GAA7B,CAAiCtB,QAAQ,CAACuB,cAA1C,CAAP;EACD,CAvC+C,CAyChD;;;EACAC,gBAAgB,CAACJ,OAAD,EAAU;IACxB,OAAO,KAAKD,aAAL,CAAmBC,OAAnB,EAA4BK,MAA5B,CAAmCvB,WAAW,CAACwB,EAA/C,CAAP;EACD;;AA5C+C;;AA+ClDC,MAAM,CAACC,OAAP,GAAiB;EACfxB,cAAc,EAAEI;AADD,CAAjB"},"metadata":{},"sourceType":"script"}