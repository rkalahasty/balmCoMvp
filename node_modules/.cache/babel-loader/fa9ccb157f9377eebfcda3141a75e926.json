{"ast":null,"code":"\"use strict\";\n\nconst punycode = require(\"punycode\");\n\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\n\nconst {\n  utf8DecodeWithoutBOM\n} = require(\"./encoding\");\n\nconst {\n  percentDecodeString,\n  utf8PercentEncodeCodePoint,\n  utf8PercentEncodeString,\n  isC0ControlPercentEncode,\n  isFragmentPercentEncode,\n  isQueryPercentEncode,\n  isSpecialQueryPercentEncode,\n  isPathPercentEncode,\n  isUserinfoPercentEncode\n} = require(\"./percent-encoding\");\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return input;\n  }\n\n  const numbers = [];\n\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n\n    const n = parseIPv4Number(part);\n\n    if (n === failure) {\n      return input;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n  input = punycode.ucs2.decode(input);\n\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input) {\n  let isNotSpecialArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  const ipv4Host = parseIPv4(asciiDomain);\n\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n\n  return asciiDomain;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n\n      ++currLen;\n    }\n  } // if trailing zeros\n\n\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  } // IPv6 serializer\n\n\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain) {\n  let beStrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n\n  if (result === null || result === \"\") {\n    return failure;\n  }\n\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const {\n    path\n  } = url;\n\n  if (path.length === 0) {\n    return;\n  }\n\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n      cannotBeABaseURL: false\n    };\n    const res = trimControlChars(this.input);\n\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n\n  this.input = res;\n  this.state = stateOverride || \"scheme start\";\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n  this.input = punycode.ucs2.decode(this.input);\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c); // exec state machine\n\n    const ret = this[`parse ${this.state}`](c, cStr);\n\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n\n    this.url.scheme = this.buffer;\n\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n\n      return false;\n    }\n\n    this.buffer = \"\";\n\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n\n  if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n\n    this.atFlag = true; // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n\n    const len = countSymbols(this.buffer);\n\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] = URLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n    --this.pointer;\n\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" && (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n\n    if (this.stateOverride) {\n      return false;\n    }\n\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 && isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) && (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) && isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n\n      this.url.host = this.base.host;\n    }\n\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n\n      if (host === failure) {\n        return failure;\n      }\n\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n\n    this.state = \"path\";\n\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n\n    if (c !== 47) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n\n      this.url.path.push(this.buffer);\n    }\n\n    this.buffer = \"\";\n\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path[0] += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if (!this.stateOverride && c === 35 || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n    this.buffer = \"\";\n\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 && (!infra.isASCIIHex(this.input[this.pointer + 1]) || !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    if (url.host === null && url.path.length > 1 && url.path[0] === \"\") {\n      output += \"/.\";\n    }\n\n    for (const segment of url.path) {\n      output += `/${segment}`;\n    }\n  }\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  } // We don't handle blobs, so this just delegates:\n\n\n  return module.exports.basicURLParse(input, {\n    baseURL: options.baseURL,\n    encodingOverride: options.encodingOverride\n  });\n};","map":{"version":3,"names":["punycode","require","tr46","infra","utf8DecodeWithoutBOM","percentDecodeString","utf8PercentEncodeCodePoint","utf8PercentEncodeString","isC0ControlPercentEncode","isFragmentPercentEncode","isQueryPercentEncode","isSpecialQueryPercentEncode","isPathPercentEncode","isUserinfoPercentEncode","specialSchemes","ftp","file","http","https","ws","wss","failure","Symbol","countSymbols","str","length","at","input","idx","c","isNaN","undefined","String","fromCodePoint","isSingleDot","buffer","toLowerCase","isDoubleDot","isWindowsDriveLetterCodePoints","cp1","cp2","isASCIIAlpha","isWindowsDriveLetterString","string","codePointAt","isNormalizedWindowsDriveLetterString","containsForbiddenHostCodePoint","search","containsForbiddenHostCodePointExcludingPercent","isSpecialScheme","scheme","isSpecial","url","isNotSpecial","defaultPort","parseIPv4Number","R","charAt","substring","regex","test","parseInt","parseIPv4","parts","split","pop","numbers","part","n","push","i","ipv4","counter","serializeIPv4","address","output","Math","floor","parseIPv6","pieceIndex","compress","pointer","ucs2","decode","value","isASCIIHex","numbersSeen","ipv4Piece","isASCIIDigit","number","swaps","temp","serializeIPv6","findLongestZeroSequence","ignore0","separator","toString","parseHost","isNotSpecialArg","parseOpaqueHost","domain","asciiDomain","domainToASCII","ipv4Host","arr","maxIdx","maxLen","currStart","currLen","serializeHost","host","Array","beStrict","result","toASCII","checkBidi","checkHyphens","checkJoiners","useSTD3ASCIIRules","verifyDNSLength","trimControlChars","replace","trimTabAndNewline","shortenPath","path","isNormalizedWindowsDriveLetter","includesCredentials","username","password","cannotHaveAUsernamePasswordPort","cannotBeABaseURL","URLStateMachine","base","encodingOverride","stateOverride","parseError","port","query","fragment","res","state","atFlag","arrFlag","passwordTokenSeenFlag","cStr","ret","prototype","parseSchemeStart","parseScheme","isASCIIAlphanumeric","parseNoScheme","slice","parseSpecialRelativeOrAuthority","parsePathOrAuthority","parseRelative","parseRelativeSlash","parseSpecialAuthoritySlashes","parseSpecialAuthorityIgnoreSlashes","parseAuthority","len","codePoint","encodedCodePoints","parseHostName","parsePort","fileOtherwiseCodePoints","Set","startsWithWindowsDriveLetter","has","parseFile","parseFileSlash","parseFileHost","parsePathStart","parsePath","parseCannotBeABaseURLPath","parseQuery","queryPercentEncodePredicate","parseFragment","serializeURL","excludeFragment","segment","serializeOrigin","tuple","module","exports","serializeURLOrigin","parseURL","e","basicURLParse","options","usm","baseURL","setTheUsername","setThePassword","serializeInteger","integer"],"sources":["C:/Users/17033/balmco/node_modules/whatwg-url/dist/url-state-machine.js"],"sourcesContent":["\"use strict\";\nconst punycode = require(\"punycode\");\nconst tr46 = require(\"tr46\");\n\nconst infra = require(\"./infra\");\nconst { utf8DecodeWithoutBOM } = require(\"./encoding\");\nconst { percentDecodeString, utf8PercentEncodeCodePoint, utf8PercentEncodeString, isC0ControlPercentEncode,\n  isFragmentPercentEncode, isQueryPercentEncode, isSpecialQueryPercentEncode, isPathPercentEncode,\n  isUserinfoPercentEncode } = require(\"./percent-encoding\");\n\nconst specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nconst failure = Symbol(\"failure\");\n\nfunction countSymbols(str) {\n  return [...str].length;\n}\n\nfunction at(input, idx) {\n  const c = input[idx];\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\n}\n\nfunction isSingleDot(buffer) {\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n}\n\nfunction isDoubleDot(buffer) {\n  buffer = buffer.toLowerCase();\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n}\n\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n}\n\nfunction isWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n}\n\nfunction isNormalizedWindowsDriveLetterString(string) {\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n}\n\nfunction containsForbiddenHostCodePoint(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|<|>|\\?|@|\\[|\\\\|\\]|\\^|\\|/u) !== -1;\n}\n\nfunction isSpecialScheme(scheme) {\n  return specialSchemes[scheme] !== undefined;\n}\n\nfunction isSpecial(url) {\n  return isSpecialScheme(url.scheme);\n}\n\nfunction isNotSpecial(url) {\n  return !isSpecialScheme(url.scheme);\n}\n\nfunction defaultPort(scheme) {\n  return specialSchemes[scheme];\n}\n\nfunction parseIPv4Number(input) {\n  let R = 10;\n\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n    input = input.substring(2);\n    R = 16;\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n    input = input.substring(1);\n    R = 8;\n  }\n\n  if (input === \"\") {\n    return 0;\n  }\n\n  let regex = /[^0-7]/u;\n  if (R === 10) {\n    regex = /[^0-9]/u;\n  }\n  if (R === 16) {\n    regex = /[^0-9A-Fa-f]/u;\n  }\n\n  if (regex.test(input)) {\n    return failure;\n  }\n\n  return parseInt(input, R);\n}\n\nfunction parseIPv4(input) {\n  const parts = input.split(\".\");\n  if (parts[parts.length - 1] === \"\") {\n    if (parts.length > 1) {\n      parts.pop();\n    }\n  }\n\n  if (parts.length > 4) {\n    return input;\n  }\n\n  const numbers = [];\n  for (const part of parts) {\n    if (part === \"\") {\n      return input;\n    }\n    const n = parseIPv4Number(part);\n    if (n === failure) {\n      return input;\n    }\n\n    numbers.push(n);\n  }\n\n  for (let i = 0; i < numbers.length - 1; ++i) {\n    if (numbers[i] > 255) {\n      return failure;\n    }\n  }\n  if (numbers[numbers.length - 1] >= 256 ** (5 - numbers.length)) {\n    return failure;\n  }\n\n  let ipv4 = numbers.pop();\n  let counter = 0;\n\n  for (const n of numbers) {\n    ipv4 += n * 256 ** (3 - counter);\n    ++counter;\n  }\n\n  return ipv4;\n}\n\nfunction serializeIPv4(address) {\n  let output = \"\";\n  let n = address;\n\n  for (let i = 1; i <= 4; ++i) {\n    output = String(n % 256) + output;\n    if (i !== 4) {\n      output = `.${output}`;\n    }\n    n = Math.floor(n / 256);\n  }\n\n  return output;\n}\n\nfunction parseIPv6(input) {\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\n  let pieceIndex = 0;\n  let compress = null;\n  let pointer = 0;\n\n  input = punycode.ucs2.decode(input);\n\n  if (input[pointer] === 58) {\n    if (input[pointer + 1] !== 58) {\n      return failure;\n    }\n\n    pointer += 2;\n    ++pieceIndex;\n    compress = pieceIndex;\n  }\n\n  while (pointer < input.length) {\n    if (pieceIndex === 8) {\n      return failure;\n    }\n\n    if (input[pointer] === 58) {\n      if (compress !== null) {\n        return failure;\n      }\n      ++pointer;\n      ++pieceIndex;\n      compress = pieceIndex;\n      continue;\n    }\n\n    let value = 0;\n    let length = 0;\n\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\n      ++pointer;\n      ++length;\n    }\n\n    if (input[pointer] === 46) {\n      if (length === 0) {\n        return failure;\n      }\n\n      pointer -= length;\n\n      if (pieceIndex > 6) {\n        return failure;\n      }\n\n      let numbersSeen = 0;\n\n      while (input[pointer] !== undefined) {\n        let ipv4Piece = null;\n\n        if (numbersSeen > 0) {\n          if (input[pointer] === 46 && numbersSeen < 4) {\n            ++pointer;\n          } else {\n            return failure;\n          }\n        }\n\n        if (!infra.isASCIIDigit(input[pointer])) {\n          return failure;\n        }\n\n        while (infra.isASCIIDigit(input[pointer])) {\n          const number = parseInt(at(input, pointer));\n          if (ipv4Piece === null) {\n            ipv4Piece = number;\n          } else if (ipv4Piece === 0) {\n            return failure;\n          } else {\n            ipv4Piece = ipv4Piece * 10 + number;\n          }\n          if (ipv4Piece > 255) {\n            return failure;\n          }\n          ++pointer;\n        }\n\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\n\n        ++numbersSeen;\n\n        if (numbersSeen === 2 || numbersSeen === 4) {\n          ++pieceIndex;\n        }\n      }\n\n      if (numbersSeen !== 4) {\n        return failure;\n      }\n\n      break;\n    } else if (input[pointer] === 58) {\n      ++pointer;\n      if (input[pointer] === undefined) {\n        return failure;\n      }\n    } else if (input[pointer] !== undefined) {\n      return failure;\n    }\n\n    address[pieceIndex] = value;\n    ++pieceIndex;\n  }\n\n  if (compress !== null) {\n    let swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex !== 0 && swaps > 0) {\n      const temp = address[compress + swaps - 1];\n      address[compress + swaps - 1] = address[pieceIndex];\n      address[pieceIndex] = temp;\n      --pieceIndex;\n      --swaps;\n    }\n  } else if (compress === null && pieceIndex !== 8) {\n    return failure;\n  }\n\n  return address;\n}\n\nfunction serializeIPv6(address) {\n  let output = \"\";\n  const compress = findLongestZeroSequence(address);\n  let ignore0 = false;\n\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\n    if (ignore0 && address[pieceIndex] === 0) {\n      continue;\n    } else if (ignore0) {\n      ignore0 = false;\n    }\n\n    if (compress === pieceIndex) {\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\n      output += separator;\n      ignore0 = true;\n      continue;\n    }\n\n    output += address[pieceIndex].toString(16);\n\n    if (pieceIndex !== 7) {\n      output += \":\";\n    }\n  }\n\n  return output;\n}\n\nfunction parseHost(input, isNotSpecialArg = false) {\n  if (input[0] === \"[\") {\n    if (input[input.length - 1] !== \"]\") {\n      return failure;\n    }\n\n    return parseIPv6(input.substring(1, input.length - 1));\n  }\n\n  if (isNotSpecialArg) {\n    return parseOpaqueHost(input);\n  }\n\n  const domain = utf8DecodeWithoutBOM(percentDecodeString(input));\n  const asciiDomain = domainToASCII(domain);\n  if (asciiDomain === failure) {\n    return failure;\n  }\n\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\n    return failure;\n  }\n\n  const ipv4Host = parseIPv4(asciiDomain);\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n    return ipv4Host;\n  }\n\n  return asciiDomain;\n}\n\nfunction parseOpaqueHost(input) {\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\n    return failure;\n  }\n\n  return utf8PercentEncodeString(input, isC0ControlPercentEncode);\n}\n\nfunction findLongestZeroSequence(arr) {\n  let maxIdx = null;\n  let maxLen = 1; // only find elements > 1\n  let currStart = null;\n  let currLen = 0;\n\n  for (let i = 0; i < arr.length; ++i) {\n    if (arr[i] !== 0) {\n      if (currLen > maxLen) {\n        maxIdx = currStart;\n        maxLen = currLen;\n      }\n\n      currStart = null;\n      currLen = 0;\n    } else {\n      if (currStart === null) {\n        currStart = i;\n      }\n      ++currLen;\n    }\n  }\n\n  // if trailing zeros\n  if (currLen > maxLen) {\n    return currStart;\n  }\n\n  return maxIdx;\n}\n\nfunction serializeHost(host) {\n  if (typeof host === \"number\") {\n    return serializeIPv4(host);\n  }\n\n  // IPv6 serializer\n  if (host instanceof Array) {\n    return `[${serializeIPv6(host)}]`;\n  }\n\n  return host;\n}\n\nfunction domainToASCII(domain, beStrict = false) {\n  const result = tr46.toASCII(domain, {\n    checkBidi: true,\n    checkHyphens: false,\n    checkJoiners: true,\n    useSTD3ASCIIRules: beStrict,\n    verifyDNSLength: beStrict\n  });\n  if (result === null || result === \"\") {\n    return failure;\n  }\n  return result;\n}\n\nfunction trimControlChars(url) {\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/ug, \"\");\n}\n\nfunction trimTabAndNewline(url) {\n  return url.replace(/\\u0009|\\u000A|\\u000D/ug, \"\");\n}\n\nfunction shortenPath(url) {\n  const { path } = url;\n  if (path.length === 0) {\n    return;\n  }\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n    return;\n  }\n\n  path.pop();\n}\n\nfunction includesCredentials(url) {\n  return url.username !== \"\" || url.password !== \"\";\n}\n\nfunction cannotHaveAUsernamePasswordPort(url) {\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n}\n\nfunction isNormalizedWindowsDriveLetter(string) {\n  return /^[A-Za-z]:$/u.test(string);\n}\n\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\n  this.pointer = 0;\n  this.input = input;\n  this.base = base || null;\n  this.encodingOverride = encodingOverride || \"utf-8\";\n  this.stateOverride = stateOverride;\n  this.url = url;\n  this.failure = false;\n  this.parseError = false;\n\n  if (!this.url) {\n    this.url = {\n      scheme: \"\",\n      username: \"\",\n      password: \"\",\n      host: null,\n      port: null,\n      path: [],\n      query: null,\n      fragment: null,\n\n      cannotBeABaseURL: false\n    };\n\n    const res = trimControlChars(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n  }\n\n  const res = trimTabAndNewline(this.input);\n  if (res !== this.input) {\n    this.parseError = true;\n  }\n  this.input = res;\n\n  this.state = stateOverride || \"scheme start\";\n\n  this.buffer = \"\";\n  this.atFlag = false;\n  this.arrFlag = false;\n  this.passwordTokenSeenFlag = false;\n\n  this.input = punycode.ucs2.decode(this.input);\n\n  for (; this.pointer <= this.input.length; ++this.pointer) {\n    const c = this.input[this.pointer];\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n\n    // exec state machine\n    const ret = this[`parse ${this.state}`](c, cStr);\n    if (!ret) {\n      break; // terminate algorithm\n    } else if (ret === failure) {\n      this.failure = true;\n      break;\n    }\n  }\n}\n\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n  if (infra.isASCIIAlpha(c)) {\n    this.buffer += cStr.toLowerCase();\n    this.state = \"scheme\";\n  } else if (!this.stateOverride) {\n    this.state = \"no scheme\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n    this.buffer += cStr.toLowerCase();\n  } else if (c === 58) {\n    if (this.stateOverride) {\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n        return false;\n      }\n\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n        return false;\n      }\n\n      if (this.url.scheme === \"file\" && this.url.host === \"\") {\n        return false;\n      }\n    }\n    this.url.scheme = this.buffer;\n    if (this.stateOverride) {\n      if (this.url.port === defaultPort(this.url.scheme)) {\n        this.url.port = null;\n      }\n      return false;\n    }\n    this.buffer = \"\";\n    if (this.url.scheme === \"file\") {\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n        this.parseError = true;\n      }\n      this.state = \"file\";\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n      this.state = \"special relative or authority\";\n    } else if (isSpecial(this.url)) {\n      this.state = \"special authority slashes\";\n    } else if (this.input[this.pointer + 1] === 47) {\n      this.state = \"path or authority\";\n      ++this.pointer;\n    } else {\n      this.url.cannotBeABaseURL = true;\n      this.url.path.push(\"\");\n      this.state = \"cannot-be-a-base-URL path\";\n    }\n  } else if (!this.stateOverride) {\n    this.buffer = \"\";\n    this.state = \"no scheme\";\n    this.pointer = -1;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\n    return failure;\n  } else if (this.base.cannotBeABaseURL && c === 35) {\n    this.url.scheme = this.base.scheme;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    this.url.fragment = \"\";\n    this.url.cannotBeABaseURL = true;\n    this.state = \"fragment\";\n  } else if (this.base.scheme === \"file\") {\n    this.state = \"file\";\n    --this.pointer;\n  } else {\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"relative\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n  if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n  this.url.scheme = this.base.scheme;\n  if (c === 47) {\n    this.state = \"relative slash\";\n  } else if (isSpecial(this.url) && c === 92) {\n    this.parseError = true;\n    this.state = \"relative slash\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      this.url.path.pop();\n      this.state = \"path\";\n      --this.pointer;\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"special authority ignore slashes\";\n  } else if (c === 47) {\n    this.state = \"authority\";\n  } else {\n    this.url.username = this.base.username;\n    this.url.password = this.base.password;\n    this.url.host = this.base.host;\n    this.url.port = this.base.port;\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\n    this.state = \"special authority ignore slashes\";\n    ++this.pointer;\n  } else {\n    this.parseError = true;\n    this.state = \"special authority ignore slashes\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n  if (c !== 47 && c !== 92) {\n    this.state = \"authority\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n  if (c === 64) {\n    this.parseError = true;\n    if (this.atFlag) {\n      this.buffer = `%40${this.buffer}`;\n    }\n    this.atFlag = true;\n\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\n    const len = countSymbols(this.buffer);\n    for (let pointer = 0; pointer < len; ++pointer) {\n      const codePoint = this.buffer.codePointAt(pointer);\n\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n        this.passwordTokenSeenFlag = true;\n        continue;\n      }\n      const encodedCodePoints = utf8PercentEncodeCodePoint(codePoint, isUserinfoPercentEncode);\n      if (this.passwordTokenSeenFlag) {\n        this.url.password += encodedCodePoints;\n      } else {\n        this.url.username += encodedCodePoints;\n      }\n    }\n    this.buffer = \"\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    if (this.atFlag && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n    this.pointer -= countSymbols(this.buffer) + 1;\n    this.buffer = \"\";\n    this.state = \"host\";\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse hostname\"] =\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n  if (this.stateOverride && this.url.scheme === \"file\") {\n    --this.pointer;\n    this.state = \"file host\";\n  } else if (c === 58 && !this.arrFlag) {\n    if (this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    }\n\n    if (this.stateOverride === \"hostname\") {\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"port\";\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92)) {\n    --this.pointer;\n    if (isSpecial(this.url) && this.buffer === \"\") {\n      this.parseError = true;\n      return failure;\n    } else if (this.stateOverride && this.buffer === \"\" &&\n               (includesCredentials(this.url) || this.url.port !== null)) {\n      this.parseError = true;\n      return false;\n    }\n\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\n    if (host === failure) {\n      return failure;\n    }\n\n    this.url.host = host;\n    this.buffer = \"\";\n    this.state = \"path start\";\n    if (this.stateOverride) {\n      return false;\n    }\n  } else {\n    if (c === 91) {\n      this.arrFlag = true;\n    } else if (c === 93) {\n      this.arrFlag = false;\n    }\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n  if (infra.isASCIIDigit(c)) {\n    this.buffer += cStr;\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\n             (isSpecial(this.url) && c === 92) ||\n             this.stateOverride) {\n    if (this.buffer !== \"\") {\n      const port = parseInt(this.buffer);\n      if (port > 2 ** 16 - 1) {\n        this.parseError = true;\n        return failure;\n      }\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n      this.buffer = \"\";\n    }\n    if (this.stateOverride) {\n      return false;\n    }\n    this.state = \"path start\";\n    --this.pointer;\n  } else {\n    this.parseError = true;\n    return failure;\n  }\n\n  return true;\n};\n\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n\nfunction startsWithWindowsDriveLetter(input, pointer) {\n  const length = input.length - pointer;\n  return length >= 2 &&\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\n}\n\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n  this.url.scheme = \"file\";\n  this.url.host = \"\";\n\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file slash\";\n  } else if (this.base !== null && this.base.scheme === \"file\") {\n    this.url.host = this.base.host;\n    this.url.path = this.base.path.slice();\n    this.url.query = this.base.query;\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (!isNaN(c)) {\n      this.url.query = null;\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\n        shortenPath(this.url);\n      } else {\n        this.parseError = true;\n        this.url.path = [];\n      }\n\n      this.state = \"path\";\n      --this.pointer;\n    }\n  } else {\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n  if (c === 47 || c === 92) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"file host\";\n  } else {\n    if (this.base !== null && this.base.scheme === \"file\") {\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer) &&\n          isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n        this.url.path.push(this.base.path[0]);\n      }\n      this.url.host = this.base.host;\n    }\n    this.state = \"path\";\n    --this.pointer;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n    --this.pointer;\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n      this.parseError = true;\n      this.state = \"path\";\n    } else if (this.buffer === \"\") {\n      this.url.host = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n    } else {\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      if (host === \"localhost\") {\n        host = \"\";\n      }\n      this.url.host = host;\n\n      if (this.stateOverride) {\n        return false;\n      }\n\n      this.buffer = \"\";\n      this.state = \"path start\";\n    }\n  } else {\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n  if (isSpecial(this.url)) {\n    if (c === 92) {\n      this.parseError = true;\n    }\n    this.state = \"path\";\n\n    if (c !== 47 && c !== 92) {\n      --this.pointer;\n    }\n  } else if (!this.stateOverride && c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (!this.stateOverride && c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else if (c !== undefined) {\n    this.state = \"path\";\n    if (c !== 47) {\n      --this.pointer;\n    }\n  } else if (this.stateOverride && this.url.host === null) {\n    this.url.path.push(\"\");\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\n      (!this.stateOverride && (c === 63 || c === 35))) {\n    if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n    }\n\n    if (isDoubleDot(this.buffer)) {\n      shortenPath(this.url);\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      }\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\n               !(isSpecial(this.url) && c === 92)) {\n      this.url.path.push(\"\");\n    } else if (!isSingleDot(this.buffer)) {\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n        this.buffer = `${this.buffer[0]}:`;\n      }\n      this.url.path.push(this.buffer);\n    }\n    this.buffer = \"\";\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    }\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += utf8PercentEncodeCodePoint(c, isPathPercentEncode);\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n  if (c === 63) {\n    this.url.query = \"\";\n    this.state = \"query\";\n  } else if (c === 35) {\n    this.url.fragment = \"\";\n    this.state = \"fragment\";\n  } else {\n    // TODO: Add: not a URL code point\n    if (!isNaN(c) && c !== 37) {\n      this.parseError = true;\n    }\n\n    if (c === 37 &&\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    if (!isNaN(c)) {\n      this.url.path[0] += utf8PercentEncodeCodePoint(c, isC0ControlPercentEncode);\n    }\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n  if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n    this.encodingOverride = \"utf-8\";\n  }\n\n  if ((!this.stateOverride && c === 35) || isNaN(c)) {\n    const queryPercentEncodePredicate = isSpecial(this.url) ? isSpecialQueryPercentEncode : isQueryPercentEncode;\n    this.url.query += utf8PercentEncodeString(this.buffer, queryPercentEncodePredicate);\n\n    this.buffer = \"\";\n\n    if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    }\n  } else if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.buffer += cStr;\n  }\n\n  return true;\n};\n\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n  if (!isNaN(c)) {\n    // TODO: If c is not a URL code point and not \"%\", parse error.\n    if (c === 37 &&\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\n      this.parseError = true;\n    }\n\n    this.url.fragment += utf8PercentEncodeCodePoint(c, isFragmentPercentEncode);\n  }\n\n  return true;\n};\n\nfunction serializeURL(url, excludeFragment) {\n  let output = `${url.scheme}:`;\n  if (url.host !== null) {\n    output += \"//\";\n\n    if (url.username !== \"\" || url.password !== \"\") {\n      output += url.username;\n      if (url.password !== \"\") {\n        output += `:${url.password}`;\n      }\n      output += \"@\";\n    }\n\n    output += serializeHost(url.host);\n\n    if (url.port !== null) {\n      output += `:${url.port}`;\n    }\n  }\n\n  if (url.cannotBeABaseURL) {\n    output += url.path[0];\n  } else {\n    if (url.host === null && url.path.length > 1 && url.path[0] === \"\") {\n      output += \"/.\";\n    }\n    for (const segment of url.path) {\n      output += `/${segment}`;\n    }\n  }\n\n  if (url.query !== null) {\n    output += `?${url.query}`;\n  }\n\n  if (!excludeFragment && url.fragment !== null) {\n    output += `#${url.fragment}`;\n  }\n\n  return output;\n}\n\nfunction serializeOrigin(tuple) {\n  let result = `${tuple.scheme}://`;\n  result += serializeHost(tuple.host);\n\n  if (tuple.port !== null) {\n    result += `:${tuple.port}`;\n  }\n\n  return result;\n}\n\nmodule.exports.serializeURL = serializeURL;\n\nmodule.exports.serializeURLOrigin = function (url) {\n  // https://url.spec.whatwg.org/#concept-url-origin\n  switch (url.scheme) {\n    case \"blob\":\n      try {\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\n      } catch (e) {\n        // serializing an opaque origin returns \"null\"\n        return \"null\";\n      }\n    case \"ftp\":\n    case \"http\":\n    case \"https\":\n    case \"ws\":\n    case \"wss\":\n      return serializeOrigin({\n        scheme: url.scheme,\n        host: url.host,\n        port: url.port\n      });\n    case \"file\":\n      // The spec says:\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\n      // Browsers tested so far:\n      // - Chrome says \"file://\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\n      // - Firefox says \"null\", but treats file: URLs as same-origin sometimes based on directory stuff; see\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\n      return \"null\";\n    default:\n      // serializing an opaque origin returns \"null\"\n      return \"null\";\n  }\n};\n\nmodule.exports.basicURLParse = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n  if (usm.failure) {\n    return null;\n  }\n\n  return usm.url;\n};\n\nmodule.exports.setTheUsername = function (url, username) {\n  url.username = utf8PercentEncodeString(username, isUserinfoPercentEncode);\n};\n\nmodule.exports.setThePassword = function (url, password) {\n  url.password = utf8PercentEncodeString(password, isUserinfoPercentEncode);\n};\n\nmodule.exports.serializeHost = serializeHost;\n\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n\nmodule.exports.serializeInteger = function (integer) {\n  return String(integer);\n};\n\nmodule.exports.parseURL = function (input, options) {\n  if (options === undefined) {\n    options = {};\n  }\n\n  // We don't handle blobs, so this just delegates:\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}