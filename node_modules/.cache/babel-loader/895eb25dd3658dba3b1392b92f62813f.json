{"ast":null,"code":"\"use strict\";\n\nconst cssom = require(\"cssom\");\n\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\n\nconst {\n  matchesDontThrow\n} = require(\"./selectors\");\n\nconst {\n  forEach,\n  indexOf\n} = Array.prototype;\nlet parsedDefaultStyleSheet; // Properties for which getResolvedValue is implemented. This is less than\n// every supported property.\n// https://drafts.csswg.org/indexes/#properties\n\nexports.propertiesWithResolvedValueImplemented = {\n  __proto__: null,\n  // https://drafts.csswg.org/css2/visufx.html#visibility\n  visibility: {\n    inherited: true,\n    initial: \"visible\",\n    computedValue: \"as-specified\"\n  }\n};\n\nexports.forEachMatchingSheetRuleOfElement = (elementImpl, handleRule) => {\n  function handleSheet(sheet) {\n    forEach.call(sheet.cssRules, rule => {\n      if (rule.media) {\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\n          forEach.call(rule.cssRules, innerRule => {\n            if (matches(innerRule, elementImpl)) {\n              handleRule(innerRule);\n            }\n          });\n        }\n      } else if (matches(rule, elementImpl)) {\n        handleRule(rule);\n      }\n    });\n  }\n\n  if (!parsedDefaultStyleSheet) {\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\n  }\n\n  handleSheet(parsedDefaultStyleSheet);\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\n};\n\nfunction matches(rule, element) {\n  return matchesDontThrow(element, rule.selectorText);\n} // Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\n// based on the previous jsdom implementation of getComputedStyle.\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\n// or rather specificity is only implemented by the order in which the matching\n// rules appear. The last rule is the most specific while the first rule is\n// the least specific.\n\n\nfunction getCascadedPropertyValue(element, property) {\n  let value = \"\";\n  exports.forEachMatchingSheetRuleOfElement(element, rule => {\n    const propertyValue = rule.style.getPropertyValue(property); // getPropertyValue returns \"\" if the property is not found\n\n    if (propertyValue !== \"\") {\n      value = propertyValue;\n    }\n  });\n  const inlineValue = element.style.getPropertyValue(property);\n\n  if (inlineValue !== \"\" && inlineValue !== null) {\n    value = inlineValue;\n  }\n\n  return value;\n} // https://drafts.csswg.org/css-cascade-4/#specified-value\n\n\nfunction getSpecifiedValue(element, property) {\n  const cascade = getCascadedPropertyValue(element, property);\n\n  if (cascade !== \"\") {\n    return cascade;\n  } // Defaulting\n\n\n  const {\n    initial,\n    inherited\n  } = exports.propertiesWithResolvedValueImplemented[property];\n\n  if (inherited && element.parentElement !== null) {\n    return getComputedValue(element.parentElement, property);\n  } // root element without parent element or inherited property\n\n\n  return initial;\n} // https://drafts.csswg.org/css-cascade-4/#computed-value\n\n\nfunction getComputedValue(element, property) {\n  const {\n    computedValue\n  } = exports.propertiesWithResolvedValueImplemented[property];\n\n  if (computedValue === \"as-specified\") {\n    return getSpecifiedValue(element, property);\n  }\n\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\n} // https://drafts.csswg.org/cssom/#resolved-value\n// Only implements `visibility`\n\n\nexports.getResolvedValue = (element, property) => {\n  // Determined for special case properties, none of which are implemented here.\n  // So we skip to \"any other property: The resolved value is the computed value.\"\n  return getComputedValue(element, property);\n};\n\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;","map":{"version":3,"names":["cssom","require","defaultStyleSheet","matchesDontThrow","forEach","indexOf","Array","prototype","parsedDefaultStyleSheet","exports","propertiesWithResolvedValueImplemented","__proto__","visibility","inherited","initial","computedValue","forEachMatchingSheetRuleOfElement","elementImpl","handleRule","handleSheet","sheet","call","cssRules","rule","media","innerRule","matches","parse","_ownerDocument","styleSheets","_list","element","selectorText","getCascadedPropertyValue","property","value","propertyValue","style","getPropertyValue","inlineValue","getSpecifiedValue","cascade","parentElement","getComputedValue","TypeError","getResolvedValue","SHADOW_DOM_PSEUDO_REGEXP"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/helpers/style-rules.js"],"sourcesContent":["\"use strict\";\nconst cssom = require(\"cssom\");\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\nconst { matchesDontThrow } = require(\"./selectors\");\n\nconst { forEach, indexOf } = Array.prototype;\n\nlet parsedDefaultStyleSheet;\n\n// Properties for which getResolvedValue is implemented. This is less than\n// every supported property.\n// https://drafts.csswg.org/indexes/#properties\nexports.propertiesWithResolvedValueImplemented = {\n  __proto__: null,\n\n  // https://drafts.csswg.org/css2/visufx.html#visibility\n  visibility: {\n    inherited: true,\n    initial: \"visible\",\n    computedValue: \"as-specified\"\n  }\n};\n\nexports.forEachMatchingSheetRuleOfElement = (elementImpl, handleRule) => {\n  function handleSheet(sheet) {\n    forEach.call(sheet.cssRules, rule => {\n      if (rule.media) {\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\n          forEach.call(rule.cssRules, innerRule => {\n            if (matches(innerRule, elementImpl)) {\n              handleRule(innerRule);\n            }\n          });\n        }\n      } else if (matches(rule, elementImpl)) {\n        handleRule(rule);\n      }\n    });\n  }\n\n  if (!parsedDefaultStyleSheet) {\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\n  }\n\n  handleSheet(parsedDefaultStyleSheet);\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\n};\n\nfunction matches(rule, element) {\n  return matchesDontThrow(element, rule.selectorText);\n}\n\n// Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\n// based on the previous jsdom implementation of getComputedStyle.\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\n// or rather specificity is only implemented by the order in which the matching\n// rules appear. The last rule is the most specific while the first rule is\n// the least specific.\nfunction getCascadedPropertyValue(element, property) {\n  let value = \"\";\n\n  exports.forEachMatchingSheetRuleOfElement(element, rule => {\n    const propertyValue = rule.style.getPropertyValue(property);\n    // getPropertyValue returns \"\" if the property is not found\n    if (propertyValue !== \"\") {\n      value = propertyValue;\n    }\n  });\n\n  const inlineValue = element.style.getPropertyValue(property);\n  if (inlineValue !== \"\" && inlineValue !== null) {\n    value = inlineValue;\n  }\n\n  return value;\n}\n\n// https://drafts.csswg.org/css-cascade-4/#specified-value\nfunction getSpecifiedValue(element, property) {\n  const cascade = getCascadedPropertyValue(element, property);\n\n  if (cascade !== \"\") {\n    return cascade;\n  }\n\n  // Defaulting\n  const { initial, inherited } = exports.propertiesWithResolvedValueImplemented[property];\n  if (inherited && element.parentElement !== null) {\n    return getComputedValue(element.parentElement, property);\n  }\n\n  // root element without parent element or inherited property\n  return initial;\n}\n\n// https://drafts.csswg.org/css-cascade-4/#computed-value\nfunction getComputedValue(element, property) {\n  const { computedValue } = exports.propertiesWithResolvedValueImplemented[property];\n  if (computedValue === \"as-specified\") {\n    return getSpecifiedValue(element, property);\n  }\n\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\n}\n\n// https://drafts.csswg.org/cssom/#resolved-value\n// Only implements `visibility`\nexports.getResolvedValue = (element, property) => {\n  // Determined for special case properties, none of which are implemented here.\n  // So we skip to \"any other property: The resolved value is the computed value.\"\n  return getComputedValue(element, property);\n};\n\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}