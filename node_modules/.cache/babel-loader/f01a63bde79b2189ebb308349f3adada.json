{"ast":null,"code":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst {\n  XML_NS,\n  XMLNS_NS\n} = require(\"../helpers/namespaces\"); // https://dom.spec.whatwg.org/#validate\n\n\nexports.name = function (globalObject, name) {\n  const result = xnv.name(name);\n\n  if (!result.success) {\n    throw DOMException.create(globalObject, [`\"${name}\" did not match the Name production: ${result.error}`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.qname = function (globalObject, qname) {\n  exports.name(globalObject, qname);\n  const result = xnv.qname(qname);\n\n  if (!result.success) {\n    throw DOMException.create(globalObject, [`\"${qname}\" did not match the QName production: ${result.error}`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.validateAndExtract = function (globalObject, namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(globalObject, qualifiedName);\n  let prefix = null;\n  let localName = qualifiedName;\n  const colonIndex = qualifiedName.indexOf(\":\");\n\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\"A namespace was given but a prefix was also extracted from the qualifiedName\", \"NamespaceError\"]);\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\", \"NamespaceError\"]);\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\", \"NamespaceError\"]);\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\", \"NamespaceError\"]);\n  }\n\n  return {\n    namespace,\n    prefix,\n    localName\n  };\n};","map":{"version":3,"names":["xnv","require","DOMException","XML_NS","XMLNS_NS","exports","name","globalObject","result","success","create","error","qname","validateAndExtract","namespace","qualifiedName","prefix","localName","colonIndex","indexOf","substring"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js"],"sourcesContent":["\"use strict\";\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { XML_NS, XMLNS_NS } = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = function (globalObject, name) {\n  const result = xnv.name(name);\n  if (!result.success) {\n    throw DOMException.create(globalObject, [\n      `\"${name}\" did not match the Name production: ${result.error}`,\n      \"InvalidCharacterError\"\n    ]);\n  }\n};\n\nexports.qname = function (globalObject, qname) {\n  exports.name(globalObject, qname);\n\n  const result = xnv.qname(qname);\n  if (!result.success) {\n    throw DOMException.create(globalObject, [\n      `\"${qname}\" did not match the QName production: ${result.error}`,\n      \"InvalidCharacterError\"\n    ]);\n  }\n};\n\nexports.validateAndExtract = function (globalObject, namespace, qualifiedName) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(globalObject, qualifiedName);\n\n  let prefix = null;\n  let localName = qualifiedName;\n\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\n      \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  return { namespace, prefix, localName };\n};\n"],"mappings":"AAAA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,gCAAD,CAA5B;;AACA,MAAM;EAAEE,MAAF;EAAUC;AAAV,IAAuBH,OAAO,CAAC,uBAAD,CAApC,C,CAEA;;;AAEAI,OAAO,CAACC,IAAR,GAAe,UAAUC,YAAV,EAAwBD,IAAxB,EAA8B;EAC3C,MAAME,MAAM,GAAGR,GAAG,CAACM,IAAJ,CAASA,IAAT,CAAf;;EACA,IAAI,CAACE,MAAM,CAACC,OAAZ,EAAqB;IACnB,MAAMP,YAAY,CAACQ,MAAb,CAAoBH,YAApB,EAAkC,CACrC,IAAGD,IAAK,wCAAuCE,MAAM,CAACG,KAAM,EADvB,EAEtC,uBAFsC,CAAlC,CAAN;EAID;AACF,CARD;;AAUAN,OAAO,CAACO,KAAR,GAAgB,UAAUL,YAAV,EAAwBK,KAAxB,EAA+B;EAC7CP,OAAO,CAACC,IAAR,CAAaC,YAAb,EAA2BK,KAA3B;EAEA,MAAMJ,MAAM,GAAGR,GAAG,CAACY,KAAJ,CAAUA,KAAV,CAAf;;EACA,IAAI,CAACJ,MAAM,CAACC,OAAZ,EAAqB;IACnB,MAAMP,YAAY,CAACQ,MAAb,CAAoBH,YAApB,EAAkC,CACrC,IAAGK,KAAM,yCAAwCJ,MAAM,CAACG,KAAM,EADzB,EAEtC,uBAFsC,CAAlC,CAAN;EAID;AACF,CAVD;;AAYAN,OAAO,CAACQ,kBAAR,GAA6B,UAAUN,YAAV,EAAwBO,SAAxB,EAAmCC,aAAnC,EAAkD;EAC7E,IAAID,SAAS,KAAK,EAAlB,EAAsB;IACpBA,SAAS,GAAG,IAAZ;EACD;;EAEDT,OAAO,CAACO,KAAR,CAAcL,YAAd,EAA4BQ,aAA5B;EAEA,IAAIC,MAAM,GAAG,IAAb;EACA,IAAIC,SAAS,GAAGF,aAAhB;EAEA,MAAMG,UAAU,GAAGH,aAAa,CAACI,OAAd,CAAsB,GAAtB,CAAnB;;EACA,IAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;IACrBF,MAAM,GAAGD,aAAa,CAACK,SAAd,CAAwB,CAAxB,EAA2BF,UAA3B,CAAT;IACAD,SAAS,GAAGF,aAAa,CAACK,SAAd,CAAwBF,UAAU,GAAG,CAArC,CAAZ;EACD;;EAED,IAAIF,MAAM,KAAK,IAAX,IAAmBF,SAAS,KAAK,IAArC,EAA2C;IACzC,MAAMZ,YAAY,CAACQ,MAAb,CAAoBH,YAApB,EAAkC,CACtC,8EADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,IAAIS,MAAM,KAAK,KAAX,IAAoBF,SAAS,KAAKX,MAAtC,EAA8C;IAC5C,MAAMD,YAAY,CAACQ,MAAb,CAAoBH,YAApB,EAAkC,CACtC,2EADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,IAAI,CAACQ,aAAa,KAAK,OAAlB,IAA6BC,MAAM,KAAK,OAAzC,KAAqDF,SAAS,KAAKV,QAAvE,EAAiF;IAC/E,MAAMF,YAAY,CAACQ,MAAb,CAAoBH,YAApB,EAAkC,CACtC,gGADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,IAAIO,SAAS,KAAKV,QAAd,IAA0BW,aAAa,KAAK,OAA5C,IAAuDC,MAAM,KAAK,OAAtE,EAA+E;IAC7E,MAAMd,YAAY,CAACQ,MAAb,CAAoBH,YAApB,EAAkC,CACtC,sFADsC,EAEtC,gBAFsC,CAAlC,CAAN;EAID;;EAED,OAAO;IAAEO,SAAF;IAAaE,MAAb;IAAqBC;EAArB,CAAP;AACD,CA7CD"},"metadata":{},"sourceType":"script"}