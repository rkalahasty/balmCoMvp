{"ast":null,"code":"\"use strict\";\n/**\n * Character classes and associated utilities for the 2nd edition of XML 1.1.\n *\n * @author Louis-Dominique Dubeau\n * @license MIT\n * @copyright Louis-Dominique Dubeau\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); //\n// Fragments.\n//\n\nexports.CHAR = \"\\u0001-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\";\nexports.RESTRICTED_CHAR = \"\\u0001-\\u0008\\u000B\\u000C\\u000E-\\u001F\\u007F-\\u0084\\u0086-\\u009F\";\nexports.S = \" \\t\\r\\n\"; // tslint:disable-next-line:max-line-length\n\nexports.NAME_START_CHAR = \":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\uD800\\uDC00-\\uDB7F\\uDFFF\";\nexports.NAME_CHAR = \"-\" + exports.NAME_START_CHAR + \".0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040\"; //\n// Regular expressions.\n//\n\nexports.CHAR_RE = new RegExp(\"^[\" + exports.CHAR + \"]$\", \"u\");\nexports.RESTRICTED_CHAR_RE = new RegExp(\"^[\" + exports.RESTRICTED_CHAR + \"]$\", \"u\");\nexports.S_RE = new RegExp(\"^[\" + exports.S + \"]+$\", \"u\");\nexports.NAME_START_CHAR_RE = new RegExp(\"^[\" + exports.NAME_START_CHAR + \"]$\", \"u\");\nexports.NAME_CHAR_RE = new RegExp(\"^[\" + exports.NAME_CHAR + \"]$\", \"u\");\nexports.NAME_RE = new RegExp(\"^[\" + exports.NAME_START_CHAR + \"][\" + exports.NAME_CHAR + \"]*$\", \"u\");\nexports.NMTOKEN_RE = new RegExp(\"^[\" + exports.NAME_CHAR + \"]+$\", \"u\");\nvar TAB = 9;\nvar NL = 0xA;\nvar CR = 0xD;\nvar SPACE = 0x20; //\n// Lists.\n//\n\n/** All characters in the ``S`` production. */\n\nexports.S_LIST = [SPACE, NL, CR, TAB];\n/**\n * Determines whether a codepoint matches the ``CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``CHAR``.\n */\n\nfunction isChar(c) {\n  return c >= 0x0001 && c <= 0xD7FF || c >= 0xE000 && c <= 0xFFFD || c >= 0x10000 && c <= 0x10FFFF;\n}\n\nexports.isChar = isChar;\n/**\n * Determines whether a codepoint matches the ``RESTRICTED_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``RESTRICTED_CHAR``.\n */\n\nfunction isRestrictedChar(c) {\n  return c >= 0x1 && c <= 0x8 || c === 0xB || c === 0xC || c >= 0xE && c <= 0x1F || c >= 0x7F && c <= 0x84 || c >= 0x86 && c <= 0x9F;\n}\n\nexports.isRestrictedChar = isRestrictedChar;\n/**\n * Determines whether a codepoint matches the ``CHAR`` production and does not\n * match the ``RESTRICTED_CHAR`` production. ``isCharAndNotRestricted(x)`` is\n * equivalent to ``isChar(x) && !isRestrictedChar(x)``. This function is faster\n * than running the two-call equivalent.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``CHAR`` and does not match\n * ``RESTRICTED_CHAR``.\n */\n\nfunction isCharAndNotRestricted(c) {\n  return c === 0x9 || c === 0xA || c === 0xD || c > 0x1F && c < 0x7F || c === 0x85 || c > 0x9F && c <= 0xD7FF || c >= 0xE000 && c <= 0xFFFD || c >= 0x10000 && c <= 0x10FFFF;\n}\n\nexports.isCharAndNotRestricted = isCharAndNotRestricted;\n/**\n * Determines whether a codepoint matches the ``S`` (space) production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``S``.\n */\n\nfunction isS(c) {\n  return c === SPACE || c === NL || c === CR || c === TAB;\n}\n\nexports.isS = isS;\n/**\n * Determines whether a codepoint matches the ``NAME_START_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``NAME_START_CHAR``.\n */\n// tslint:disable-next-line:cyclomatic-complexity\n\nfunction isNameStartChar(c) {\n  return c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A || c === 0x3A || c === 0x5F || c === 0x200C || c === 0x200D || c >= 0xC0 && c <= 0xD6 || c >= 0xD8 && c <= 0xF6 || c >= 0x00F8 && c <= 0x02FF || c >= 0x0370 && c <= 0x037D || c >= 0x037F && c <= 0x1FFF || c >= 0x2070 && c <= 0x218F || c >= 0x2C00 && c <= 0x2FEF || c >= 0x3001 && c <= 0xD7FF || c >= 0xF900 && c <= 0xFDCF || c >= 0xFDF0 && c <= 0xFFFD || c >= 0x10000 && c <= 0xEFFFF;\n}\n\nexports.isNameStartChar = isNameStartChar;\n/**\n * Determines whether a codepoint matches the ``NAME_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``NAME_CHAR``.\n */\n\nfunction isNameChar(c) {\n  return isNameStartChar(c) || c >= 0x30 && c <= 0x39 || c === 0x2D || c === 0x2E || c === 0xB7 || c >= 0x0300 && c <= 0x036F || c >= 0x203F && c <= 0x2040;\n}\n\nexports.isNameChar = isNameChar;","map":{"version":3,"mappings":"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","names":["exports","RegExp","TAB","NL","CR","SPACE","isChar","c","isRestrictedChar","isCharAndNotRestricted","isS","isNameStartChar","isNameChar"],"sources":["../../../../src/xml/1.1/ed2.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}