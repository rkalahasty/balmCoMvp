{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\n\nconst OrderedSet = require(\"../helpers/ordered-set.js\");\n\nconst {\n  asciiLowercase\n} = require(\"../helpers/strings.js\");\n\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst {\n  getAttributeValue,\n  setAttributeValue,\n  hasAttributeByName\n} = require(\"../attributes.js\");\n\nfunction validateTokens(globalObject) {\n  for (var _len = arguments.length, tokens = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    tokens[_key - 1] = arguments[_key];\n  }\n\n  for (const token of tokens) {\n    if (token === \"\") {\n      throw DOMException.create(globalObject, [\"The token provided must not be empty.\", \"SyntaxError\"]);\n    }\n  }\n\n  for (const token of tokens) {\n    if (/[\\t\\n\\f\\r ]/.test(token)) {\n      throw DOMException.create(globalObject, [\"The token provided contains HTML space characters, which are not valid in tokens.\", \"InvalidCharacterError\"]);\n    }\n  }\n} // https://dom.spec.whatwg.org/#domtokenlist\n\n\nclass DOMTokenListImpl {\n  constructor(globalObject, args, privateData) {\n    this._globalObject = globalObject; // _syncWithElement() must always be called before any _tokenSet access.\n\n    this._tokenSet = new OrderedSet();\n    this._element = privateData.element;\n    this._attributeLocalName = privateData.attributeLocalName;\n    this._supportedTokens = privateData.supportedTokens; // Needs synchronization with element if token set is to be accessed.\n\n    this._dirty = true;\n  }\n\n  attrModified() {\n    this._dirty = true;\n  }\n\n  _syncWithElement() {\n    if (!this._dirty) {\n      return;\n    }\n\n    const val = getAttributeValue(this._element, this._attributeLocalName);\n\n    if (val === null) {\n      this._tokenSet.empty();\n    } else {\n      this._tokenSet = OrderedSet.parse(val);\n    }\n\n    this._dirty = false;\n  }\n\n  _validationSteps(token) {\n    if (!this._supportedTokens) {\n      throw new TypeError(`${this._attributeLocalName} attribute has no supported tokens`);\n    }\n\n    const lowerToken = asciiLowercase(token);\n    return this._supportedTokens.has(lowerToken);\n  }\n\n  _updateSteps() {\n    if (!hasAttributeByName(this._element, this._attributeLocalName) && this._tokenSet.isEmpty()) {\n      return;\n    }\n\n    setAttributeValue(this._element, this._attributeLocalName, this._tokenSet.serialize());\n  }\n\n  _serializeSteps() {\n    return getAttributeValue(this._element, this._attributeLocalName);\n  } // Used by other parts of jsdom\n\n\n  get tokenSet() {\n    this._syncWithElement();\n\n    return this._tokenSet;\n  }\n\n  get length() {\n    this._syncWithElement();\n\n    return this._tokenSet.size;\n  }\n\n  get [idlUtils.supportedPropertyIndices]() {\n    this._syncWithElement();\n\n    return this._tokenSet.keys();\n  }\n\n  item(index) {\n    this._syncWithElement();\n\n    if (index >= this._tokenSet.size) {\n      return null;\n    }\n\n    return this._tokenSet.get(index);\n  }\n\n  contains(token) {\n    this._syncWithElement();\n\n    return this._tokenSet.contains(token);\n  }\n\n  add() {\n    for (var _len2 = arguments.length, tokens = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      tokens[_key2] = arguments[_key2];\n    }\n\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n\n    this._syncWithElement();\n\n    for (const token of tokens) {\n      this._tokenSet.append(token);\n    }\n\n    this._updateSteps();\n  }\n\n  remove() {\n    for (var _len3 = arguments.length, tokens = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      tokens[_key3] = arguments[_key3];\n    }\n\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n\n    this._syncWithElement();\n\n    this._tokenSet.remove(...tokens);\n\n    this._updateSteps();\n  }\n\n  toggle(token) {\n    let force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    validateTokens(this._globalObject, token);\n\n    this._syncWithElement();\n\n    if (this._tokenSet.contains(token)) {\n      if (force === undefined || force === false) {\n        this._tokenSet.remove(token);\n\n        this._updateSteps();\n\n        return false;\n      }\n\n      return true;\n    }\n\n    if (force === undefined || force === true) {\n      this._tokenSet.append(token);\n\n      this._updateSteps();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  replace(token, newToken) {\n    validateTokens(this._globalObject, token, newToken);\n\n    this._syncWithElement();\n\n    if (!this._tokenSet.contains(token)) {\n      return false;\n    }\n\n    this._tokenSet.replace(token, newToken);\n\n    this._updateSteps();\n\n    return true;\n  }\n\n  supports(token) {\n    return this._validationSteps(token);\n  }\n\n  get value() {\n    return this._serializeSteps();\n  }\n\n  set value(V) {\n    setAttributeValue(this._element, this._attributeLocalName, V);\n  }\n\n}\n\nexports.implementation = DOMTokenListImpl;","map":{"version":3,"names":["DOMException","require","OrderedSet","asciiLowercase","idlUtils","getAttributeValue","setAttributeValue","hasAttributeByName","validateTokens","globalObject","tokens","token","create","test","DOMTokenListImpl","constructor","args","privateData","_globalObject","_tokenSet","_element","element","_attributeLocalName","attributeLocalName","_supportedTokens","supportedTokens","_dirty","attrModified","_syncWithElement","val","empty","parse","_validationSteps","TypeError","lowerToken","has","_updateSteps","isEmpty","serialize","_serializeSteps","tokenSet","length","size","supportedPropertyIndices","keys","item","index","get","contains","add","append","remove","toggle","force","undefined","replace","newToken","supports","value","V","exports","implementation"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/nodes/DOMTokenList-impl.js"],"sourcesContent":["\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst OrderedSet = require(\"../helpers/ordered-set.js\");\nconst { asciiLowercase } = require(\"../helpers/strings.js\");\nconst idlUtils = require(\"../generated/utils.js\");\n\nconst { getAttributeValue, setAttributeValue, hasAttributeByName } = require(\"../attributes.js\");\n\nfunction validateTokens(globalObject, ...tokens) {\n  for (const token of tokens) {\n    if (token === \"\") {\n      throw DOMException.create(globalObject, [\"The token provided must not be empty.\", \"SyntaxError\"]);\n    }\n  }\n  for (const token of tokens) {\n    if (/[\\t\\n\\f\\r ]/.test(token)) {\n      throw DOMException.create(globalObject, [\n        \"The token provided contains HTML space characters, which are not valid in tokens.\",\n        \"InvalidCharacterError\"\n      ]);\n    }\n  }\n}\n\n// https://dom.spec.whatwg.org/#domtokenlist\nclass DOMTokenListImpl {\n  constructor(globalObject, args, privateData) {\n    this._globalObject = globalObject;\n\n    // _syncWithElement() must always be called before any _tokenSet access.\n    this._tokenSet = new OrderedSet();\n    this._element = privateData.element;\n    this._attributeLocalName = privateData.attributeLocalName;\n    this._supportedTokens = privateData.supportedTokens;\n\n    // Needs synchronization with element if token set is to be accessed.\n    this._dirty = true;\n  }\n\n  attrModified() {\n    this._dirty = true;\n  }\n\n  _syncWithElement() {\n    if (!this._dirty) {\n      return;\n    }\n\n    const val = getAttributeValue(this._element, this._attributeLocalName);\n    if (val === null) {\n      this._tokenSet.empty();\n    } else {\n      this._tokenSet = OrderedSet.parse(val);\n    }\n\n    this._dirty = false;\n  }\n\n  _validationSteps(token) {\n    if (!this._supportedTokens) {\n      throw new TypeError(`${this._attributeLocalName} attribute has no supported tokens`);\n    }\n    const lowerToken = asciiLowercase(token);\n    return this._supportedTokens.has(lowerToken);\n  }\n\n  _updateSteps() {\n    if (!hasAttributeByName(this._element, this._attributeLocalName) && this._tokenSet.isEmpty()) {\n      return;\n    }\n    setAttributeValue(this._element, this._attributeLocalName, this._tokenSet.serialize());\n  }\n\n  _serializeSteps() {\n    return getAttributeValue(this._element, this._attributeLocalName);\n  }\n\n  // Used by other parts of jsdom\n  get tokenSet() {\n    this._syncWithElement();\n    return this._tokenSet;\n  }\n\n  get length() {\n    this._syncWithElement();\n    return this._tokenSet.size;\n  }\n\n  get [idlUtils.supportedPropertyIndices]() {\n    this._syncWithElement();\n    return this._tokenSet.keys();\n  }\n\n  item(index) {\n    this._syncWithElement();\n    if (index >= this._tokenSet.size) {\n      return null;\n    }\n    return this._tokenSet.get(index);\n  }\n\n  contains(token) {\n    this._syncWithElement();\n    return this._tokenSet.contains(token);\n  }\n\n  add(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n    this._syncWithElement();\n    for (const token of tokens) {\n      this._tokenSet.append(token);\n    }\n    this._updateSteps();\n  }\n\n  remove(...tokens) {\n    for (const token of tokens) {\n      validateTokens(this._globalObject, token);\n    }\n    this._syncWithElement();\n    this._tokenSet.remove(...tokens);\n    this._updateSteps();\n  }\n\n  toggle(token, force = undefined) {\n    validateTokens(this._globalObject, token);\n    this._syncWithElement();\n    if (this._tokenSet.contains(token)) {\n      if (force === undefined || force === false) {\n        this._tokenSet.remove(token);\n        this._updateSteps();\n        return false;\n      }\n      return true;\n    }\n    if (force === undefined || force === true) {\n      this._tokenSet.append(token);\n      this._updateSteps();\n      return true;\n    }\n    return false;\n  }\n\n  replace(token, newToken) {\n    validateTokens(this._globalObject, token, newToken);\n    this._syncWithElement();\n    if (!this._tokenSet.contains(token)) {\n      return false;\n    }\n    this._tokenSet.replace(token, newToken);\n    this._updateSteps();\n    return true;\n  }\n\n  supports(token) {\n    return this._validationSteps(token);\n  }\n\n  get value() {\n    return this._serializeSteps();\n  }\n\n  set value(V) {\n    setAttributeValue(this._element, this._attributeLocalName, V);\n  }\n}\n\nexports.implementation = DOMTokenListImpl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}