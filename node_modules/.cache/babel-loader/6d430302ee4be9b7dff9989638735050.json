{"ast":null,"code":"\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  getLabelsForLabelable\n} = require(\"../helpers/form-controls\");\n\nconst {\n  parseFloatingPointNumber\n} = require(\"../helpers/strings\");\n\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  } // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n\n\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    const parsedValue = parseFloatingPointNumber(valueAttr);\n\n    if (parsedValue !== null && parsedValue > 0) {\n      return parsedValue;\n    }\n\n    return 0;\n  } // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n\n\n  get _currentValue() {\n    const value = this._value;\n    return value > this.max ? this.max : value;\n  }\n\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n\n    return 0;\n  }\n\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n\n  get max() {\n    const max = this.getAttributeNS(null, \"max\");\n\n    if (max !== null) {\n      const parsedMax = parseFloatingPointNumber(max);\n\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n\n    return 1.0;\n  }\n\n  set max(value) {\n    if (value > 0) {\n      this.setAttributeNS(null, \"max\", value);\n    }\n  }\n\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n\n    return this._currentValue / this.max;\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};","map":{"version":3,"names":["HTMLElementImpl","require","implementation","getLabelsForLabelable","parseFloatingPointNumber","HTMLProgressElementImpl","constructor","globalObject","args","privateData","_labels","_isDeterminate","hasAttributeNS","_value","valueAttr","getAttributeNS","parsedValue","_currentValue","value","max","setAttributeNS","parsedMax","position","labels","module","exports"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/nodes/HTMLProgressElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { getLabelsForLabelable } = require(\"../helpers/form-controls\");\nconst { parseFloatingPointNumber } = require(\"../helpers/strings\");\n\nclass HTMLProgressElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._labels = null;\n  }\n\n  get _isDeterminate() {\n    return this.hasAttributeNS(null, \"value\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-value\n  get _value() {\n    const valueAttr = this.getAttributeNS(null, \"value\");\n    const parsedValue = parseFloatingPointNumber(valueAttr);\n    if (parsedValue !== null && parsedValue > 0) {\n      return parsedValue;\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-elements.html#concept-progress-current-value\n  get _currentValue() {\n    const value = this._value;\n    return value > this.max ? this.max : value;\n  }\n\n  get value() {\n    if (this._isDeterminate) {\n      return this._currentValue;\n    }\n    return 0;\n  }\n  set value(value) {\n    this.setAttributeNS(null, \"value\", value);\n  }\n\n  get max() {\n    const max = this.getAttributeNS(null, \"max\");\n    if (max !== null) {\n      const parsedMax = parseFloatingPointNumber(max);\n      if (parsedMax !== null && parsedMax > 0) {\n        return parsedMax;\n      }\n    }\n    return 1.0;\n  }\n  set max(value) {\n    if (value > 0) {\n      this.setAttributeNS(null, \"max\", value);\n    }\n  }\n\n  get position() {\n    if (!this._isDeterminate) {\n      return -1;\n    }\n\n    return this._currentValue / this.max;\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLProgressElementImpl\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AACA,MAAM;EAAEC;AAAF,IAA4BF,OAAO,CAAC,0BAAD,CAAzC;;AACA,MAAM;EAAEG;AAAF,IAA+BH,OAAO,CAAC,oBAAD,CAA5C;;AAEA,MAAMI,uBAAN,SAAsCL,eAAtC,CAAsD;EACpDM,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;IAC3C,MAAMF,YAAN,EAAoBC,IAApB,EAA0BC,WAA1B;IACA,KAAKC,OAAL,GAAe,IAAf;EACD;;EAEiB,IAAdC,cAAc,GAAG;IACnB,OAAO,KAAKC,cAAL,CAAoB,IAApB,EAA0B,OAA1B,CAAP;EACD,CARmD,CAUpD;;;EACU,IAANC,MAAM,GAAG;IACX,MAAMC,SAAS,GAAG,KAAKC,cAAL,CAAoB,IAApB,EAA0B,OAA1B,CAAlB;IACA,MAAMC,WAAW,GAAGZ,wBAAwB,CAACU,SAAD,CAA5C;;IACA,IAAIE,WAAW,KAAK,IAAhB,IAAwBA,WAAW,GAAG,CAA1C,EAA6C;MAC3C,OAAOA,WAAP;IACD;;IACD,OAAO,CAAP;EACD,CAlBmD,CAoBpD;;;EACiB,IAAbC,aAAa,GAAG;IAClB,MAAMC,KAAK,GAAG,KAAKL,MAAnB;IACA,OAAOK,KAAK,GAAG,KAAKC,GAAb,GAAmB,KAAKA,GAAxB,GAA8BD,KAArC;EACD;;EAEQ,IAALA,KAAK,GAAG;IACV,IAAI,KAAKP,cAAT,EAAyB;MACvB,OAAO,KAAKM,aAAZ;IACD;;IACD,OAAO,CAAP;EACD;;EACQ,IAALC,KAAK,CAACA,KAAD,EAAQ;IACf,KAAKE,cAAL,CAAoB,IAApB,EAA0B,OAA1B,EAAmCF,KAAnC;EACD;;EAEM,IAAHC,GAAG,GAAG;IACR,MAAMA,GAAG,GAAG,KAAKJ,cAAL,CAAoB,IAApB,EAA0B,KAA1B,CAAZ;;IACA,IAAII,GAAG,KAAK,IAAZ,EAAkB;MAChB,MAAME,SAAS,GAAGjB,wBAAwB,CAACe,GAAD,CAA1C;;MACA,IAAIE,SAAS,KAAK,IAAd,IAAsBA,SAAS,GAAG,CAAtC,EAAyC;QACvC,OAAOA,SAAP;MACD;IACF;;IACD,OAAO,GAAP;EACD;;EACM,IAAHF,GAAG,CAACD,KAAD,EAAQ;IACb,IAAIA,KAAK,GAAG,CAAZ,EAAe;MACb,KAAKE,cAAL,CAAoB,IAApB,EAA0B,KAA1B,EAAiCF,KAAjC;IACD;EACF;;EAEW,IAARI,QAAQ,GAAG;IACb,IAAI,CAAC,KAAKX,cAAV,EAA0B;MACxB,OAAO,CAAC,CAAR;IACD;;IAED,OAAO,KAAKM,aAAL,GAAqB,KAAKE,GAAjC;EACD;;EAES,IAANI,MAAM,GAAG;IACX,OAAOpB,qBAAqB,CAAC,IAAD,CAA5B;EACD;;AA9DmD;;AAiEtDqB,MAAM,CAACC,OAAP,GAAiB;EACfvB,cAAc,EAAEG;AADD,CAAjB"},"metadata":{},"sourceType":"script"}