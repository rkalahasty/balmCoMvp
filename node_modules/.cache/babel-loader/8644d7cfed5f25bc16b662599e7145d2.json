{"ast":null,"code":"\"use strict\"; // https://infra.spec.whatwg.org/#sets\n//\n// Only use this class if a Set cannot be used, e.g. when \"replace\" operation is needed, since there's no way to replace\n// an element while keep the relative order using a Set, only remove and then add something at the end.\n\nmodule.exports = class OrderedSet {\n  constructor() {\n    this._items = [];\n  }\n\n  append(item) {\n    if (!this.contains(item)) {\n      this._items.push(item);\n    }\n  }\n\n  prepend(item) {\n    if (!this.contains(item)) {\n      this._items.unshift(item);\n    }\n  }\n\n  replace(item, replacement) {\n    let seen = false;\n\n    for (let i = 0; i < this._items.length;) {\n      const isInstance = this._items[i] === item || this._items[i] === replacement;\n\n      if (seen && isInstance) {\n        this._items.splice(i, 1);\n      } else {\n        if (isInstance) {\n          this._items[i] = replacement;\n          seen = true;\n        }\n\n        i++;\n      }\n    }\n  }\n\n  remove() {\n    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n      items[_key] = arguments[_key];\n    }\n\n    this.removePredicate(item => items.includes(item));\n  }\n\n  removePredicate(predicate) {\n    for (let i = 0; i < this._items.length;) {\n      if (predicate(this._items[i])) {\n        this._items.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n  }\n\n  empty() {\n    this._items.length = 0;\n  }\n\n  contains(item) {\n    return this._items.includes(item);\n  }\n\n  get size() {\n    return this._items.length;\n  }\n\n  isEmpty() {\n    return this._items.length === 0;\n  } // Useful for other parts of jsdom\n\n\n  [Symbol.iterator]() {\n    return this._items[Symbol.iterator]();\n  }\n\n  keys() {\n    return this._items.keys();\n  }\n\n  get(index) {\n    return this._items[index];\n  }\n\n  some(func) {\n    return this._items.some(func);\n  } // https://dom.spec.whatwg.org/#concept-ordered-set-parser\n\n\n  static parse(input) {\n    const tokens = new OrderedSet();\n\n    for (const token of input.split(/[\\t\\n\\f\\r ]+/)) {\n      if (token) {\n        tokens.append(token);\n      }\n    }\n\n    return tokens;\n  } // https://dom.spec.whatwg.org/#concept-ordered-set-serializer\n\n\n  serialize() {\n    return this._items.join(\" \");\n  }\n\n};","map":{"version":3,"names":["module","exports","OrderedSet","constructor","_items","append","item","contains","push","prepend","unshift","replace","replacement","seen","i","length","isInstance","splice","remove","items","removePredicate","includes","predicate","empty","size","isEmpty","Symbol","iterator","keys","get","index","some","func","parse","input","tokens","token","split","serialize","join"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/helpers/ordered-set.js"],"sourcesContent":["\"use strict\";\n\n// https://infra.spec.whatwg.org/#sets\n//\n// Only use this class if a Set cannot be used, e.g. when \"replace\" operation is needed, since there's no way to replace\n// an element while keep the relative order using a Set, only remove and then add something at the end.\n\nmodule.exports = class OrderedSet {\n  constructor() {\n    this._items = [];\n  }\n\n  append(item) {\n    if (!this.contains(item)) {\n      this._items.push(item);\n    }\n  }\n\n  prepend(item) {\n    if (!this.contains(item)) {\n      this._items.unshift(item);\n    }\n  }\n\n  replace(item, replacement) {\n    let seen = false;\n    for (let i = 0; i < this._items.length;) {\n      const isInstance = this._items[i] === item || this._items[i] === replacement;\n      if (seen && isInstance) {\n        this._items.splice(i, 1);\n      } else {\n        if (isInstance) {\n          this._items[i] = replacement;\n          seen = true;\n        }\n        i++;\n      }\n    }\n  }\n\n  remove(...items) {\n    this.removePredicate(item => items.includes(item));\n  }\n\n  removePredicate(predicate) {\n    for (let i = 0; i < this._items.length;) {\n      if (predicate(this._items[i])) {\n        this._items.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n  }\n\n  empty() {\n    this._items.length = 0;\n  }\n\n  contains(item) {\n    return this._items.includes(item);\n  }\n\n  get size() {\n    return this._items.length;\n  }\n\n  isEmpty() {\n    return this._items.length === 0;\n  }\n\n  // Useful for other parts of jsdom\n\n  [Symbol.iterator]() {\n    return this._items[Symbol.iterator]();\n  }\n\n  keys() {\n    return this._items.keys();\n  }\n\n  get(index) {\n    return this._items[index];\n  }\n\n  some(func) {\n    return this._items.some(func);\n  }\n\n  // https://dom.spec.whatwg.org/#concept-ordered-set-parser\n  static parse(input) {\n    const tokens = new OrderedSet();\n    for (const token of input.split(/[\\t\\n\\f\\r ]+/)) {\n      if (token) {\n        tokens.append(token);\n      }\n    }\n    return tokens;\n  }\n\n  // https://dom.spec.whatwg.org/#concept-ordered-set-serializer\n  serialize() {\n    return this._items.join(\" \");\n  }\n};\n"],"mappings":"AAAA,a,CAEA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,UAAN,CAAiB;EAChCC,WAAW,GAAG;IACZ,KAAKC,MAAL,GAAc,EAAd;EACD;;EAEDC,MAAM,CAACC,IAAD,EAAO;IACX,IAAI,CAAC,KAAKC,QAAL,CAAcD,IAAd,CAAL,EAA0B;MACxB,KAAKF,MAAL,CAAYI,IAAZ,CAAiBF,IAAjB;IACD;EACF;;EAEDG,OAAO,CAACH,IAAD,EAAO;IACZ,IAAI,CAAC,KAAKC,QAAL,CAAcD,IAAd,CAAL,EAA0B;MACxB,KAAKF,MAAL,CAAYM,OAAZ,CAAoBJ,IAApB;IACD;EACF;;EAEDK,OAAO,CAACL,IAAD,EAAOM,WAAP,EAAoB;IACzB,IAAIC,IAAI,GAAG,KAAX;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,MAAL,CAAYW,MAAhC,GAAyC;MACvC,MAAMC,UAAU,GAAG,KAAKZ,MAAL,CAAYU,CAAZ,MAAmBR,IAAnB,IAA2B,KAAKF,MAAL,CAAYU,CAAZ,MAAmBF,WAAjE;;MACA,IAAIC,IAAI,IAAIG,UAAZ,EAAwB;QACtB,KAAKZ,MAAL,CAAYa,MAAZ,CAAmBH,CAAnB,EAAsB,CAAtB;MACD,CAFD,MAEO;QACL,IAAIE,UAAJ,EAAgB;UACd,KAAKZ,MAAL,CAAYU,CAAZ,IAAiBF,WAAjB;UACAC,IAAI,GAAG,IAAP;QACD;;QACDC,CAAC;MACF;IACF;EACF;;EAEDI,MAAM,GAAW;IAAA,kCAAPC,KAAO;MAAPA,KAAO;IAAA;;IACf,KAAKC,eAAL,CAAqBd,IAAI,IAAIa,KAAK,CAACE,QAAN,CAAef,IAAf,CAA7B;EACD;;EAEDc,eAAe,CAACE,SAAD,EAAY;IACzB,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,MAAL,CAAYW,MAAhC,GAAyC;MACvC,IAAIO,SAAS,CAAC,KAAKlB,MAAL,CAAYU,CAAZ,CAAD,CAAb,EAA+B;QAC7B,KAAKV,MAAL,CAAYa,MAAZ,CAAmBH,CAAnB,EAAsB,CAAtB;MACD,CAFD,MAEO;QACLA,CAAC;MACF;IACF;EACF;;EAEDS,KAAK,GAAG;IACN,KAAKnB,MAAL,CAAYW,MAAZ,GAAqB,CAArB;EACD;;EAEDR,QAAQ,CAACD,IAAD,EAAO;IACb,OAAO,KAAKF,MAAL,CAAYiB,QAAZ,CAAqBf,IAArB,CAAP;EACD;;EAEO,IAAJkB,IAAI,GAAG;IACT,OAAO,KAAKpB,MAAL,CAAYW,MAAnB;EACD;;EAEDU,OAAO,GAAG;IACR,OAAO,KAAKrB,MAAL,CAAYW,MAAZ,KAAuB,CAA9B;EACD,CA7D+B,CA+DhC;;;EAEgB,CAAfW,MAAM,CAACC,QAAQ,IAAI;IAClB,OAAO,KAAKvB,MAAL,CAAYsB,MAAM,CAACC,QAAnB,GAAP;EACD;;EAEDC,IAAI,GAAG;IACL,OAAO,KAAKxB,MAAL,CAAYwB,IAAZ,EAAP;EACD;;EAEDC,GAAG,CAACC,KAAD,EAAQ;IACT,OAAO,KAAK1B,MAAL,CAAY0B,KAAZ,CAAP;EACD;;EAEDC,IAAI,CAACC,IAAD,EAAO;IACT,OAAO,KAAK5B,MAAL,CAAY2B,IAAZ,CAAiBC,IAAjB,CAAP;EACD,CA/E+B,CAiFhC;;;EACY,OAALC,KAAK,CAACC,KAAD,EAAQ;IAClB,MAAMC,MAAM,GAAG,IAAIjC,UAAJ,EAAf;;IACA,KAAK,MAAMkC,KAAX,IAAoBF,KAAK,CAACG,KAAN,CAAY,cAAZ,CAApB,EAAiD;MAC/C,IAAID,KAAJ,EAAW;QACTD,MAAM,CAAC9B,MAAP,CAAc+B,KAAd;MACD;IACF;;IACD,OAAOD,MAAP;EACD,CA1F+B,CA4FhC;;;EACAG,SAAS,GAAG;IACV,OAAO,KAAKlC,MAAL,CAAYmC,IAAZ,CAAiB,GAAjB,CAAP;EACD;;AA/F+B,CAAlC"},"metadata":{},"sourceType":"script"}