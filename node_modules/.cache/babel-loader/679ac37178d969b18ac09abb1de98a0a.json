{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\n\nconst whatwgURL = require(\"whatwg-url\");\n\nconst {\n  domSymbolTree\n} = require(\"./living/helpers/internal-constants\");\n\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\n\nexports.hasWeakRefs = typeof WeakRef === \"function\";\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  } // path might contain spaces, so convert those to %20\n\n\n  return \"file://\" + encodeURI(pathname);\n};\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\n\n\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\n\n\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\n\nexports.mixin = (target, source) => {\n  const keys = Reflect.ownKeys(source);\n\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nlet memoizeQueryTypeCounter = 0;\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\n\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  const type = memoizeQueryTypeCounter++;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!this._memoizedQueries) {\n      return fn.apply(this, args);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    let key;\n\n    if (args.length === 1 && typeof args[0] === \"string\") {\n      key = args[0];\n    } else if (args.length === 2 && typeof args[0] === \"string\" && typeof args[1] === \"string\") {\n      key = args[0] + \"::\" + args[1];\n    } else {\n      return fn.apply(this, args);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, args);\n    }\n\n    return this._memoizedQueries[type][key];\n  };\n};\n\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n\n    yield [firstResult.done ? null : firstResult.value, secondResult.done ? null : secondResult.value];\n  }\n};\n\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) {\n    // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  } // disconnected or equal:\n\n\n  return 0;\n};\n/* eslint-disable global-require */\n\n\nexports.Canvas = null;\nlet canvasInstalled = false;\n\ntry {\n  require.resolve(\"canvas\");\n\n  canvasInstalled = true;\n} catch (e) {// canvas is not installed\n}\n\nif (canvasInstalled) {\n  const Canvas = require(\"canvas\");\n\n  if (typeof Canvas.createCanvas === \"function\") {\n    // In browserify, the require will succeed but return an empty object\n    exports.Canvas = Canvas;\n  }\n}","map":{"version":3,"names":["path","require","whatwgURL","domSymbolTree","SYMBOL_TREE_POSITION","TreePosition","exports","hasWeakRefs","WeakRef","toFileUrl","fileName","pathname","resolve","process","cwd","replace","encodeURI","define","object","properties","name","Object","getOwnPropertyNames","propDesc","getOwnPropertyDescriptor","defineProperty","addConstants","Constructor","propertyMap","property","value","addConstant","prototype","configurable","enumerable","writable","mixin","target","source","keys","Reflect","ownKeys","i","length","memoizeQueryTypeCounter","memoizeQuery","fn","type","args","_memoizedQueries","apply","create","key","isValidAbsoluteURL","str","parseURL","isValidTargetOrigin","simultaneousIterators","first","second","firstResult","next","secondResult","done","treeOrderSorter","a","b","compare","compareTreePosition","PRECEDING","FOLLOWING","Canvas","canvasInstalled","e","createCanvas"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/utils.js"],"sourcesContent":["\"use strict\";\nconst path = require(\"path\");\nconst whatwgURL = require(\"whatwg-url\");\nconst { domSymbolTree } = require(\"./living/helpers/internal-constants\");\nconst SYMBOL_TREE_POSITION = require(\"symbol-tree\").TreePosition;\n\nexports.hasWeakRefs = typeof WeakRef === \"function\";\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  let pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  // path might contain spaces, so convert those to %20\n  return \"file://\" + encodeURI(pathname);\n};\n\n/**\n * Define a set of properties on an object, by copying the property descriptors\n * from the original object.\n *\n * - `object` {Object} the target object\n * - `properties` {Object} the source from which to copy property descriptors\n */\nexports.define = function define(object, properties) {\n  for (const name of Object.getOwnPropertyNames(properties)) {\n    const propDesc = Object.getOwnPropertyDescriptor(properties, name);\n    Object.defineProperty(object, name, propDesc);\n  }\n};\n\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (const property in propertyMap) {\n    const value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    writable: false,\n    value\n  });\n}\n\nexports.mixin = (target, source) => {\n  const keys = Reflect.ownKeys(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nlet memoizeQueryTypeCounter = 0;\n\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  const type = memoizeQueryTypeCounter++;\n\n  return function (...args) {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, args);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    let key;\n    if (args.length === 1 && typeof args[0] === \"string\") {\n      key = args[0];\n    } else if (args.length === 2 && typeof args[0] === \"string\" && typeof args[1] === \"string\") {\n      key = args[0] + \"::\" + args[1];\n    } else {\n      return fn.apply(this, args);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, args);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\n\nfunction isValidAbsoluteURL(str) {\n  return whatwgURL.parseURL(str) !== null;\n}\n\nexports.isValidTargetOrigin = function (str) {\n  return str === \"*\" || str === \"/\" || isValidAbsoluteURL(str);\n};\n\nexports.simultaneousIterators = function* (first, second) {\n  for (;;) {\n    const firstResult = first.next();\n    const secondResult = second.next();\n\n    if (firstResult.done && secondResult.done) {\n      return;\n    }\n\n    yield [\n      firstResult.done ? null : firstResult.value,\n      secondResult.done ? null : secondResult.value\n    ];\n  }\n};\n\nexports.treeOrderSorter = function (a, b) {\n  const compare = domSymbolTree.compareTreePosition(a, b);\n\n  if (compare & SYMBOL_TREE_POSITION.PRECEDING) { // b is preceding a\n    return 1;\n  }\n\n  if (compare & SYMBOL_TREE_POSITION.FOLLOWING) {\n    return -1;\n  }\n\n  // disconnected or equal:\n  return 0;\n};\n\n/* eslint-disable global-require */\n\nexports.Canvas = null;\nlet canvasInstalled = false;\ntry {\n  require.resolve(\"canvas\");\n  canvasInstalled = true;\n} catch (e) {\n  // canvas is not installed\n}\nif (canvasInstalled) {\n  const Canvas = require(\"canvas\");\n  if (typeof Canvas.createCanvas === \"function\") {\n    // In browserify, the require will succeed but return an empty object\n    exports.Canvas = Canvas;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}