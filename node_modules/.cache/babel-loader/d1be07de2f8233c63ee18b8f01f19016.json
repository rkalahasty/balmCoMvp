{"ast":null,"code":"\"use strict\";\n\nconst Blob = require(\"../generated/Blob\");\n\nconst {\n  isArrayBuffer\n} = require(\"../generated/utils\");\n\nfunction convertLineEndingsToNative(s) {\n  // jsdom always pretends to be *nix, for consistency.\n  // See also https://github.com/jsdom/jsdom/issues/2396.\n  return s.replace(/\\r\\n|\\r|\\n/g, \"\\n\");\n}\n\nexports.implementation = class BlobImpl {\n  constructor(globalObject, args) {\n    const parts = args[0];\n    const properties = args[1];\n    const buffers = [];\n\n    if (parts !== undefined) {\n      for (const part of parts) {\n        let buffer;\n\n        if (isArrayBuffer(part)) {\n          buffer = Buffer.from(part);\n        } else if (ArrayBuffer.isView(part)) {\n          buffer = Buffer.from(part.buffer, part.byteOffset, part.byteLength);\n        } else if (Blob.isImpl(part)) {\n          buffer = part._buffer;\n        } else {\n          let s = part;\n\n          if (properties.endings === \"native\") {\n            s = convertLineEndingsToNative(part);\n          }\n\n          buffer = Buffer.from(s);\n        }\n\n        buffers.push(buffer);\n      }\n    }\n\n    this._buffer = Buffer.concat(buffers);\n    this._globalObject = globalObject;\n    this.type = properties.type;\n\n    if (/[^\\u0020-\\u007E]/.test(this.type)) {\n      this.type = \"\";\n    } else {\n      this.type = this.type.toLowerCase();\n    }\n  }\n\n  get size() {\n    return this._buffer.length;\n  }\n\n  slice(start, end, contentType) {\n    const {\n      size\n    } = this;\n    let relativeStart, relativeEnd, relativeContentType;\n\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n\n    if (contentType === undefined) {\n      relativeContentType = \"\";\n    } else {\n      // sanitization (lower case and invalid char check) is done in the\n      // constructor\n      relativeContentType = contentType;\n    }\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n    const buffer = this._buffer;\n    const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n    const blob = Blob.createImpl(this._globalObject, [[], {\n      type: relativeContentType\n    }], {});\n    blob._buffer = slicedBuffer;\n    return blob;\n  }\n\n};","map":{"version":3,"names":["Blob","require","isArrayBuffer","convertLineEndingsToNative","s","replace","exports","implementation","BlobImpl","constructor","globalObject","args","parts","properties","buffers","undefined","part","buffer","Buffer","from","ArrayBuffer","isView","byteOffset","byteLength","isImpl","_buffer","endings","push","concat","_globalObject","type","test","toLowerCase","size","length","slice","start","end","contentType","relativeStart","relativeEnd","relativeContentType","Math","max","min","span","slicedBuffer","blob","createImpl"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/file-api/Blob-impl.js"],"sourcesContent":["\"use strict\";\nconst Blob = require(\"../generated/Blob\");\nconst { isArrayBuffer } = require(\"../generated/utils\");\n\nfunction convertLineEndingsToNative(s) {\n  // jsdom always pretends to be *nix, for consistency.\n  // See also https://github.com/jsdom/jsdom/issues/2396.\n  return s.replace(/\\r\\n|\\r|\\n/g, \"\\n\");\n}\n\nexports.implementation = class BlobImpl {\n  constructor(globalObject, args) {\n    const parts = args[0];\n    const properties = args[1];\n\n    const buffers = [];\n\n    if (parts !== undefined) {\n      for (const part of parts) {\n        let buffer;\n        if (isArrayBuffer(part)) {\n          buffer = Buffer.from(part);\n        } else if (ArrayBuffer.isView(part)) {\n          buffer = Buffer.from(part.buffer, part.byteOffset, part.byteLength);\n        } else if (Blob.isImpl(part)) {\n          buffer = part._buffer;\n        } else {\n          let s = part;\n          if (properties.endings === \"native\") {\n            s = convertLineEndingsToNative(part);\n          }\n          buffer = Buffer.from(s);\n        }\n        buffers.push(buffer);\n      }\n    }\n\n    this._buffer = Buffer.concat(buffers);\n    this._globalObject = globalObject;\n\n    this.type = properties.type;\n    if (/[^\\u0020-\\u007E]/.test(this.type)) {\n      this.type = \"\";\n    } else {\n      this.type = this.type.toLowerCase();\n    }\n  }\n\n  get size() {\n    return this._buffer.length;\n  }\n\n  slice(start, end, contentType) {\n    const { size } = this;\n\n    let relativeStart, relativeEnd, relativeContentType;\n\n    if (start === undefined) {\n      relativeStart = 0;\n    } else if (start < 0) {\n      relativeStart = Math.max(size + start, 0);\n    } else {\n      relativeStart = Math.min(start, size);\n    }\n    if (end === undefined) {\n      relativeEnd = size;\n    } else if (end < 0) {\n      relativeEnd = Math.max(size + end, 0);\n    } else {\n      relativeEnd = Math.min(end, size);\n    }\n\n    if (contentType === undefined) {\n      relativeContentType = \"\";\n    } else {\n      // sanitization (lower case and invalid char check) is done in the\n      // constructor\n      relativeContentType = contentType;\n    }\n\n    const span = Math.max(relativeEnd - relativeStart, 0);\n\n    const buffer = this._buffer;\n    const slicedBuffer = buffer.slice(\n      relativeStart,\n      relativeStart + span\n    );\n\n    const blob = Blob.createImpl(this._globalObject, [[], { type: relativeContentType }], {});\n    blob._buffer = slicedBuffer;\n    return blob;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}