{"ast":null,"code":"\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\n\nconst whatwgEncoding = require(\"whatwg-encoding\");\n\nconst {\n  parseURL,\n  serializeURL\n} = require(\"whatwg-url\");\n\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\n\nconst window = require(\"../../browser/Window\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst {\n  evaluateJavaScriptURL\n} = require(\"../window/navigation\");\n\nconst {\n  parseIntoDocument\n} = require(\"../../browser/parser\");\n\nconst {\n  documentBaseURL\n} = require(\"../helpers/document-base-url\");\n\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\n\nconst {\n  getAttributeValue\n} = require(\"../attributes\");\n\nconst idlUtils = require(\"../generated/utils\");\n\nfunction fireLoadEvent(document, frame, attaching) {\n  if (attaching) {\n    fireAnEvent(\"load\", frame);\n    return;\n  }\n\n  const dummyPromise = Promise.resolve();\n\n  function onLoad() {\n    fireAnEvent(\"load\", frame);\n  }\n\n  document._queue.push(dummyPromise, onLoad);\n}\n\nfunction fetchFrame(serializedURL, frame, document, contentDoc) {\n  const resourceLoader = document._resourceLoader;\n  let request;\n\n  function onFrameLoaded(data) {\n    const sniffOptions = {\n      defaultEncoding: document._encoding\n    };\n\n    if (request.response) {\n      const contentType = MIMEType.parse(request.response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      sniffOptions.transportLayerEncodingLabel = contentType.parameters.get(\"charset\");\n\n      if (contentType) {\n        if (contentType.isXML()) {\n          contentDoc._parsingMode = \"xml\";\n        }\n\n        contentDoc.contentType = contentType.essence;\n      }\n    }\n\n    const encoding = sniffHTMLEncoding(data, sniffOptions);\n    contentDoc._encoding = encoding;\n    const html = whatwgEncoding.decode(data, contentDoc._encoding);\n\n    try {\n      parseIntoDocument(html, contentDoc);\n    } catch (error) {\n      const {\n        DOMException\n      } = contentDoc._globalObject;\n\n      if (error.constructor.name === \"DOMException\" && error.code === DOMException.SYNTAX_ERR && contentDoc._parsingMode === \"xml\") {\n        // As defined (https://html.spec.whatwg.org/#read-xml) parsing error in XML document may be reported inline by\n        // mutating the document.\n        const element = contentDoc.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n        element.textContent = error.message;\n\n        while (contentDoc.childNodes.length > 0) {\n          contentDoc.removeChild(contentDoc.lastChild);\n        }\n\n        contentDoc.appendChild(element);\n      } else {\n        throw error;\n      }\n    }\n\n    contentDoc.close();\n    return new Promise((resolve, reject) => {\n      contentDoc.addEventListener(\"load\", resolve);\n      contentDoc.addEventListener(\"error\", reject);\n    });\n  }\n\n  request = resourceLoader.fetch(serializedURL, {\n    element: frame,\n    onLoad: onFrameLoaded\n  });\n}\n\nfunction canDispatchEvents(frame, attaching) {\n  if (!attaching) {\n    return false;\n  }\n\n  return Object.keys(frame._eventListeners).length === 0;\n}\n\nfunction loadFrame(frame, attaching) {\n  if (frame._contentDocument) {\n    if (frame._contentDocument._defaultView) {\n      // close calls delete on its document.\n      frame._contentDocument._defaultView.close();\n    } else {\n      delete frame._contentDocument;\n    }\n  }\n\n  const parentDoc = frame._ownerDocument; // https://html.spec.whatwg.org/#process-the-iframe-attributes\n\n  let url;\n  const srcAttribute = getAttributeValue(frame, \"src\");\n\n  if (srcAttribute === \"\") {\n    url = parseURL(\"about:blank\");\n  } else {\n    url = parseURL(srcAttribute, {\n      baseURL: documentBaseURL(parentDoc) || undefined\n    }) || parseURL(\"about:blank\");\n  }\n\n  const serializedURL = serializeURL(url);\n  const wnd = window.createWindow({\n    parsingMode: \"html\",\n    url: url.scheme === \"javascript\" ? parentDoc.URL : serializedURL,\n    parentOrigin: parentDoc._origin,\n    resourceLoader: parentDoc._defaultView._resourceLoader,\n    referrer: parentDoc.URL,\n    cookieJar: parentDoc._cookieJar,\n    pool: parentDoc._pool,\n    encoding: parentDoc._encoding,\n    runScripts: parentDoc._defaultView._runScripts,\n    commonForOrigin: parentDoc._defaultView._commonForOrigin,\n    pretendToBeVisual: parentDoc._defaultView._pretendToBeVisual\n  });\n  const contentDoc = frame._contentDocument = idlUtils.implForWrapper(wnd._document);\n  const parent = parentDoc._defaultView;\n  const contentWindow = contentDoc._defaultView;\n  contentWindow._parent = parent;\n  contentWindow._top = parent.top;\n  contentWindow._frameElement = frame;\n  contentWindow._virtualConsole = parent._virtualConsole;\n\n  if (parentDoc._origin === contentDoc._origin) {\n    contentWindow._currentOriginData.windowsInSameOrigin.push(contentWindow);\n  }\n\n  const noQueue = canDispatchEvents(frame, attaching); // Handle about:blank with a simulated load of an empty document.\n\n  if (serializedURL === \"about:blank\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else if (url.scheme === \"javascript\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    const result = evaluateJavaScriptURL(contentWindow, url);\n\n    if (typeof result === \"string\") {\n      contentDoc.body.textContent = result;\n    }\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else {\n    fetchFrame(serializedURL, frame, parentDoc, contentDoc);\n  }\n}\n\nfunction refreshAccessors(document) {\n  const {\n    _defaultView\n  } = document;\n\n  if (!_defaultView) {\n    return;\n  }\n\n  const frames = document.querySelectorAll(\"iframe,frame\"); // delete accessors for all frames\n\n  for (let i = 0; i < _defaultView._length; ++i) {\n    delete _defaultView[i];\n  }\n\n  _defaultView._length = frames.length;\n  Array.prototype.forEach.call(frames, (frame, i) => {\n    Object.defineProperty(_defaultView, i, {\n      configurable: true,\n      enumerable: true,\n\n      get() {\n        return frame.contentWindow;\n      }\n\n    });\n  });\n}\n\nclass HTMLFrameElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._contentDocument = null;\n  }\n\n  _attrModified(name, value, oldVal) {\n    super._attrModified(name, value, oldVal);\n\n    if (name === \"src\") {\n      // iframe should never load in a document without a Window\n      // (e.g. implementation.createHTMLDocument)\n      if (this._attached && this._ownerDocument._defaultView) {\n        loadFrame(this);\n      }\n    }\n  }\n\n  _detach() {\n    super._detach();\n\n    if (this.contentWindow) {\n      this.contentWindow.close();\n    }\n\n    refreshAccessors(this._ownerDocument);\n  }\n\n  _attach() {\n    super._attach();\n\n    if (this._ownerDocument._defaultView) {\n      loadFrame(this, true);\n    }\n\n    refreshAccessors(this._ownerDocument);\n  }\n\n  get contentDocument() {\n    return this._contentDocument;\n  }\n\n  get contentWindow() {\n    return this.contentDocument ? this.contentDocument._defaultView : null;\n  }\n\n}\n\nmodule.exports = {\n  implementation: HTMLFrameElementImpl\n};","map":{"version":3,"names":["MIMEType","require","whatwgEncoding","parseURL","serializeURL","sniffHTMLEncoding","window","HTMLElementImpl","implementation","evaluateJavaScriptURL","parseIntoDocument","documentBaseURL","fireAnEvent","getAttributeValue","idlUtils","fireLoadEvent","document","frame","attaching","dummyPromise","Promise","resolve","onLoad","_queue","push","fetchFrame","serializedURL","contentDoc","resourceLoader","_resourceLoader","request","onFrameLoaded","data","sniffOptions","defaultEncoding","_encoding","response","contentType","parse","headers","transportLayerEncodingLabel","parameters","get","isXML","_parsingMode","essence","encoding","html","decode","error","DOMException","_globalObject","constructor","name","code","SYNTAX_ERR","element","createElementNS","textContent","message","childNodes","length","removeChild","lastChild","appendChild","close","reject","addEventListener","fetch","canDispatchEvents","Object","keys","_eventListeners","loadFrame","_contentDocument","_defaultView","parentDoc","_ownerDocument","url","srcAttribute","baseURL","undefined","wnd","createWindow","parsingMode","scheme","URL","parentOrigin","_origin","referrer","cookieJar","_cookieJar","pool","_pool","runScripts","_runScripts","commonForOrigin","_commonForOrigin","pretendToBeVisual","_pretendToBeVisual","implForWrapper","_document","parent","contentWindow","_parent","_top","top","_frameElement","_virtualConsole","_currentOriginData","windowsInSameOrigin","noQueue","result","body","refreshAccessors","frames","querySelectorAll","i","_length","Array","prototype","forEach","call","defineProperty","configurable","enumerable","HTMLFrameElementImpl","globalObject","args","privateData","_attrModified","value","oldVal","_attached","_detach","_attach","contentDocument","module","exports"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/nodes/HTMLFrameElement-impl.js"],"sourcesContent":["\"use strict\";\n\nconst MIMEType = require(\"whatwg-mimetype\");\nconst whatwgEncoding = require(\"whatwg-encoding\");\nconst { parseURL, serializeURL } = require(\"whatwg-url\");\nconst sniffHTMLEncoding = require(\"html-encoding-sniffer\");\n\nconst window = require(\"../../browser/Window\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst { evaluateJavaScriptURL } = require(\"../window/navigation\");\nconst { parseIntoDocument } = require(\"../../browser/parser\");\nconst { documentBaseURL } = require(\"../helpers/document-base-url\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst { getAttributeValue } = require(\"../attributes\");\nconst idlUtils = require(\"../generated/utils\");\n\nfunction fireLoadEvent(document, frame, attaching) {\n  if (attaching) {\n    fireAnEvent(\"load\", frame);\n\n    return;\n  }\n\n  const dummyPromise = Promise.resolve();\n\n  function onLoad() {\n    fireAnEvent(\"load\", frame);\n  }\n\n  document._queue.push(dummyPromise, onLoad);\n}\n\nfunction fetchFrame(serializedURL, frame, document, contentDoc) {\n  const resourceLoader = document._resourceLoader;\n\n  let request;\n\n  function onFrameLoaded(data) {\n    const sniffOptions = {\n      defaultEncoding: document._encoding\n    };\n\n    if (request.response) {\n      const contentType = MIMEType.parse(request.response.headers[\"content-type\"]) || new MIMEType(\"text/plain\");\n      sniffOptions.transportLayerEncodingLabel = contentType.parameters.get(\"charset\");\n\n      if (contentType) {\n        if (contentType.isXML()) {\n          contentDoc._parsingMode = \"xml\";\n        }\n        contentDoc.contentType = contentType.essence;\n      }\n    }\n\n    const encoding = sniffHTMLEncoding(data, sniffOptions);\n    contentDoc._encoding = encoding;\n\n    const html = whatwgEncoding.decode(data, contentDoc._encoding);\n\n    try {\n      parseIntoDocument(html, contentDoc);\n    } catch (error) {\n      const { DOMException } = contentDoc._globalObject;\n\n      if (\n        error.constructor.name === \"DOMException\" &&\n        error.code === DOMException.SYNTAX_ERR &&\n        contentDoc._parsingMode === \"xml\"\n      ) {\n        // As defined (https://html.spec.whatwg.org/#read-xml) parsing error in XML document may be reported inline by\n        // mutating the document.\n        const element = contentDoc.createElementNS(\"http://www.mozilla.org/newlayout/xml/parsererror.xml\", \"parsererror\");\n        element.textContent = error.message;\n\n        while (contentDoc.childNodes.length > 0) {\n          contentDoc.removeChild(contentDoc.lastChild);\n        }\n        contentDoc.appendChild(element);\n      } else {\n        throw error;\n      }\n    }\n\n    contentDoc.close();\n\n    return new Promise((resolve, reject) => {\n      contentDoc.addEventListener(\"load\", resolve);\n      contentDoc.addEventListener(\"error\", reject);\n    });\n  }\n\n  request = resourceLoader.fetch(serializedURL, {\n    element: frame,\n    onLoad: onFrameLoaded\n  });\n}\n\nfunction canDispatchEvents(frame, attaching) {\n  if (!attaching) {\n    return false;\n  }\n\n  return Object.keys(frame._eventListeners).length === 0;\n}\n\nfunction loadFrame(frame, attaching) {\n  if (frame._contentDocument) {\n    if (frame._contentDocument._defaultView) {\n      // close calls delete on its document.\n      frame._contentDocument._defaultView.close();\n    } else {\n      delete frame._contentDocument;\n    }\n  }\n\n  const parentDoc = frame._ownerDocument;\n\n  // https://html.spec.whatwg.org/#process-the-iframe-attributes\n  let url;\n  const srcAttribute = getAttributeValue(frame, \"src\");\n  if (srcAttribute === \"\") {\n    url = parseURL(\"about:blank\");\n  } else {\n    url = parseURL(srcAttribute, { baseURL: documentBaseURL(parentDoc) || undefined }) || parseURL(\"about:blank\");\n  }\n  const serializedURL = serializeURL(url);\n\n  const wnd = window.createWindow({\n    parsingMode: \"html\",\n    url: url.scheme === \"javascript\" ? parentDoc.URL : serializedURL,\n    parentOrigin: parentDoc._origin,\n    resourceLoader: parentDoc._defaultView._resourceLoader,\n    referrer: parentDoc.URL,\n    cookieJar: parentDoc._cookieJar,\n    pool: parentDoc._pool,\n    encoding: parentDoc._encoding,\n    runScripts: parentDoc._defaultView._runScripts,\n    commonForOrigin: parentDoc._defaultView._commonForOrigin,\n    pretendToBeVisual: parentDoc._defaultView._pretendToBeVisual\n  });\n\n  const contentDoc = frame._contentDocument = idlUtils.implForWrapper(wnd._document);\n  const parent = parentDoc._defaultView;\n  const contentWindow = contentDoc._defaultView;\n  contentWindow._parent = parent;\n  contentWindow._top = parent.top;\n  contentWindow._frameElement = frame;\n  contentWindow._virtualConsole = parent._virtualConsole;\n\n  if (parentDoc._origin === contentDoc._origin) {\n    contentWindow._currentOriginData.windowsInSameOrigin.push(contentWindow);\n  }\n\n  const noQueue = canDispatchEvents(frame, attaching);\n\n  // Handle about:blank with a simulated load of an empty document.\n  if (serializedURL === \"about:blank\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else if (url.scheme === \"javascript\") {\n    // Cannot be done inside the enqueued callback; the documentElement etc. need to be immediately available.\n    parseIntoDocument(\"<html><head></head><body></body></html>\", contentDoc);\n    contentDoc.close(noQueue);\n    const result = evaluateJavaScriptURL(contentWindow, url);\n    if (typeof result === \"string\") {\n      contentDoc.body.textContent = result;\n    }\n    if (noQueue) {\n      fireLoadEvent(parentDoc, frame, noQueue);\n    } else {\n      contentDoc.addEventListener(\"load\", () => {\n        fireLoadEvent(parentDoc, frame);\n      });\n    }\n  } else {\n    fetchFrame(serializedURL, frame, parentDoc, contentDoc);\n  }\n}\n\nfunction refreshAccessors(document) {\n  const { _defaultView } = document;\n\n  if (!_defaultView) {\n    return;\n  }\n\n  const frames = document.querySelectorAll(\"iframe,frame\");\n\n  // delete accessors for all frames\n  for (let i = 0; i < _defaultView._length; ++i) {\n    delete _defaultView[i];\n  }\n\n  _defaultView._length = frames.length;\n  Array.prototype.forEach.call(frames, (frame, i) => {\n    Object.defineProperty(_defaultView, i, {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return frame.contentWindow;\n      }\n    });\n  });\n}\n\nclass HTMLFrameElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._contentDocument = null;\n  }\n  _attrModified(name, value, oldVal) {\n    super._attrModified(name, value, oldVal);\n    if (name === \"src\") {\n      // iframe should never load in a document without a Window\n      // (e.g. implementation.createHTMLDocument)\n      if (this._attached && this._ownerDocument._defaultView) {\n        loadFrame(this);\n      }\n    }\n  }\n\n  _detach() {\n    super._detach();\n\n    if (this.contentWindow) {\n      this.contentWindow.close();\n    }\n\n    refreshAccessors(this._ownerDocument);\n  }\n\n  _attach() {\n    super._attach();\n\n    if (this._ownerDocument._defaultView) {\n      loadFrame(this, true);\n    }\n    refreshAccessors(this._ownerDocument);\n  }\n\n  get contentDocument() {\n    return this._contentDocument;\n  }\n\n  get contentWindow() {\n    return this.contentDocument ? this.contentDocument._defaultView : null;\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLFrameElementImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}