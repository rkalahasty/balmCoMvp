{"ast":null,"code":"\"use strict\";\n\nconst {\n  findSlot,\n  assignSlot,\n  assignSlotable\n} = require(\"../helpers/shadow-dom\"); // https://dom.spec.whatwg.org/#mixin-slotable\n// https://dom.spec.whatwg.org/#light-tree-slotables\n\n\nclass SlotableMixinImpl {\n  _initSlotableMixin() {\n    this._slotableName = \"\";\n  }\n\n  _attrModifiedSlotableMixin(name, value, oldValue) {\n    if (name === \"slot\") {\n      if (value === oldValue) {\n        return;\n      }\n\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n\n      if (value === null || value === \"\") {\n        this._slotableName = \"\";\n      } else {\n        this._slotableName = value;\n      }\n\n      if (this._assignedSlot) {\n        assignSlotable(this._assignedSlot);\n      }\n\n      assignSlot(this);\n    }\n  }\n\n  get assignedSlot() {\n    return findSlot(this, \"open\");\n  }\n\n}\n\nmodule.exports = {\n  implementation: SlotableMixinImpl\n};","map":{"version":3,"names":["findSlot","assignSlot","assignSlotable","require","SlotableMixinImpl","_initSlotableMixin","_slotableName","_attrModifiedSlotableMixin","name","value","oldValue","_assignedSlot","assignedSlot","module","exports","implementation"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/nodes/Slotable-impl.js"],"sourcesContent":["\"use strict\";\n\nconst { findSlot, assignSlot, assignSlotable } = require(\"../helpers/shadow-dom\");\n\n// https://dom.spec.whatwg.org/#mixin-slotable\n// https://dom.spec.whatwg.org/#light-tree-slotables\nclass SlotableMixinImpl {\n  _initSlotableMixin() {\n    this._slotableName = \"\";\n  }\n\n  _attrModifiedSlotableMixin(name, value, oldValue) {\n    if (name === \"slot\") {\n      if (value === oldValue) {\n        return;\n      }\n\n      if (value === null && oldValue === \"\") {\n        return;\n      }\n\n      if (value === \"\" && oldValue === null) {\n        return;\n      }\n\n      if (value === null || value === \"\") {\n        this._slotableName = \"\";\n      } else {\n        this._slotableName = value;\n      }\n\n\n      if (this._assignedSlot) {\n        assignSlotable(this._assignedSlot);\n      }\n\n      assignSlot(this);\n    }\n  }\n\n  get assignedSlot() {\n    return findSlot(this, \"open\");\n  }\n}\n\nmodule.exports = {\n  implementation: SlotableMixinImpl\n};\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA,QAAF;EAAYC,UAAZ;EAAwBC;AAAxB,IAA2CC,OAAO,CAAC,uBAAD,CAAxD,C,CAEA;AACA;;;AACA,MAAMC,iBAAN,CAAwB;EACtBC,kBAAkB,GAAG;IACnB,KAAKC,aAAL,GAAqB,EAArB;EACD;;EAEDC,0BAA0B,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwB;IAChD,IAAIF,IAAI,KAAK,MAAb,EAAqB;MACnB,IAAIC,KAAK,KAAKC,QAAd,EAAwB;QACtB;MACD;;MAED,IAAID,KAAK,KAAK,IAAV,IAAkBC,QAAQ,KAAK,EAAnC,EAAuC;QACrC;MACD;;MAED,IAAID,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,IAAjC,EAAuC;QACrC;MACD;;MAED,IAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,EAAhC,EAAoC;QAClC,KAAKH,aAAL,GAAqB,EAArB;MACD,CAFD,MAEO;QACL,KAAKA,aAAL,GAAqBG,KAArB;MACD;;MAGD,IAAI,KAAKE,aAAT,EAAwB;QACtBT,cAAc,CAAC,KAAKS,aAAN,CAAd;MACD;;MAEDV,UAAU,CAAC,IAAD,CAAV;IACD;EACF;;EAEe,IAAZW,YAAY,GAAG;IACjB,OAAOZ,QAAQ,CAAC,IAAD,EAAO,MAAP,CAAf;EACD;;AApCqB;;AAuCxBa,MAAM,CAACC,OAAP,GAAiB;EACfC,cAAc,EAAEX;AADD,CAAjB"},"metadata":{},"sourceType":"script"}