{"ast":null,"code":"\"use strict\";\n\nconst {\n  createEventAccessor\n} = require(\"../helpers/create-event-accessor\");\n\nconst events = new Set([// WindowEventHandlers\n\"afterprint\", \"beforeprint\", \"beforeunload\", \"hashchange\", \"languagechange\", \"message\", \"messageerror\", \"offline\", \"online\", \"pagehide\", \"pageshow\", \"popstate\", \"rejectionhandled\", \"storage\", \"unhandledrejection\", \"unload\", // inherited and overridden\n\"blur\", \"error\", \"focus\", \"load\", \"resize\", \"scroll\"]); // This class builds on GlobalEventHandlers, which must be mixed in first.\n\nclass WindowEventHandlersImpl {\n  _proxyWindowEventsToWindow() {\n    // We're a <body> or <frameset>, so we need to proxy these specific events to the Window (if it exists)\n    this._getEventHandlerTarget = event => {\n      if (events.has(event)) {\n        return this.ownerDocument.defaultView || null;\n      }\n\n      return this;\n    };\n  }\n\n}\n\nfor (const event of events) {\n  createEventAccessor(WindowEventHandlersImpl.prototype, event);\n}\n\nmodule.exports = {\n  implementation: WindowEventHandlersImpl\n};","map":{"version":3,"names":["createEventAccessor","require","events","Set","WindowEventHandlersImpl","_proxyWindowEventsToWindow","_getEventHandlerTarget","event","has","ownerDocument","defaultView","prototype","module","exports","implementation"],"sources":["C:/Users/17033/balmco/node_modules/jsdom/lib/jsdom/living/nodes/WindowEventHandlers-impl.js"],"sourcesContent":["\"use strict\";\n\nconst { createEventAccessor } = require(\"../helpers/create-event-accessor\");\n\nconst events = new Set([\n  // WindowEventHandlers\n  \"afterprint\",\n  \"beforeprint\",\n  \"beforeunload\",\n  \"hashchange\",\n  \"languagechange\",\n  \"message\",\n  \"messageerror\",\n  \"offline\",\n  \"online\",\n  \"pagehide\",\n  \"pageshow\",\n  \"popstate\",\n  \"rejectionhandled\",\n  \"storage\",\n  \"unhandledrejection\",\n  \"unload\",\n\n  // inherited and overridden\n  \"blur\",\n  \"error\",\n  \"focus\",\n  \"load\",\n  \"resize\",\n  \"scroll\"\n]);\n\n// This class builds on GlobalEventHandlers, which must be mixed in first.\nclass WindowEventHandlersImpl {\n  _proxyWindowEventsToWindow() {\n    // We're a <body> or <frameset>, so we need to proxy these specific events to the Window (if it exists)\n    this._getEventHandlerTarget = event => {\n      if (events.has(event)) {\n        return this.ownerDocument.defaultView || null;\n      }\n      return this;\n    };\n  }\n}\n\nfor (const event of events) {\n  createEventAccessor(WindowEventHandlersImpl.prototype, event);\n}\n\nmodule.exports = {\n  implementation: WindowEventHandlersImpl\n};\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAA0BC,OAAO,CAAC,kCAAD,CAAvC;;AAEA,MAAMC,MAAM,GAAG,IAAIC,GAAJ,CAAQ,CACrB;AACA,YAFqB,EAGrB,aAHqB,EAIrB,cAJqB,EAKrB,YALqB,EAMrB,gBANqB,EAOrB,SAPqB,EAQrB,cARqB,EASrB,SATqB,EAUrB,QAVqB,EAWrB,UAXqB,EAYrB,UAZqB,EAarB,UAbqB,EAcrB,kBAdqB,EAerB,SAfqB,EAgBrB,oBAhBqB,EAiBrB,QAjBqB,EAmBrB;AACA,MApBqB,EAqBrB,OArBqB,EAsBrB,OAtBqB,EAuBrB,MAvBqB,EAwBrB,QAxBqB,EAyBrB,QAzBqB,CAAR,CAAf,C,CA4BA;;AACA,MAAMC,uBAAN,CAA8B;EAC5BC,0BAA0B,GAAG;IAC3B;IACA,KAAKC,sBAAL,GAA8BC,KAAK,IAAI;MACrC,IAAIL,MAAM,CAACM,GAAP,CAAWD,KAAX,CAAJ,EAAuB;QACrB,OAAO,KAAKE,aAAL,CAAmBC,WAAnB,IAAkC,IAAzC;MACD;;MACD,OAAO,IAAP;IACD,CALD;EAMD;;AAT2B;;AAY9B,KAAK,MAAMH,KAAX,IAAoBL,MAApB,EAA4B;EAC1BF,mBAAmB,CAACI,uBAAuB,CAACO,SAAzB,EAAoCJ,KAApC,CAAnB;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;EACfC,cAAc,EAAEV;AADD,CAAjB"},"metadata":{},"sourceType":"script"}